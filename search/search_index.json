{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BridgePRS is a trans-ancestry software that improves PRS in diverse populations. Package Downloads Operating System Link Linux 64-bit v2.3.3 Mac 64-bit v2.3.3 Windows Not available Latest Updates 2023-09-15 (v0.1.7) We have added sample thousand genomes data. update log can be found here Quick Start Get started right away using sample data with our Quick Start Tutorial! . Completing the tutorial and training is often sufficient to being using BridgePRS! Information BridgePRS is a software package written in R (main) and Python (wrapper) that depends on Plink (by Christopher Chang ). For more information on installing dependencies, please refer to Requirements . To learn more about BridgePRS see our complete Guide. Citation: Our Manuscript is in press at Nature Genetics Please cite our preprint : Hoggart C, Choi SW, Garc\u00eda-Gonz\u00e1lez J, Souaiaia T, Preuss M, O'Reilly P. BridgePRS : A powerful trans-ancestry Polygenic Risk Score method. bioRxiv (2023). doi: 10.1101/2023.02.17.528938. Contact For questions about the methodology, this website, or our manuscript please contact Dr Clive Hoggart , Tade , or Dr Paul O'Reilly . Issues This wiki should cover basic usage for BridgePRS. If you have problems, please feel free to submit an issues here or visit our google group . Acknowledgements We would like to thank Brian Fulton Howard for his expert programming advice.","title":"Home"},{"location":"#package-downloads","text":"Operating System Link Linux 64-bit v2.3.3 Mac 64-bit v2.3.3 Windows Not available Latest Updates","title":"Package Downloads"},{"location":"#2023-09-15-v017","text":"We have added sample thousand genomes data. update log can be found here","title":"2023-09-15 (v0.1.7)"},{"location":"#quick-start","text":"Get started right away using sample data with our Quick Start Tutorial! . Completing the tutorial and training is often sufficient to being using BridgePRS!","title":"Quick Start"},{"location":"#information","text":"BridgePRS is a software package written in R (main) and Python (wrapper) that depends on Plink (by Christopher Chang ). For more information on installing dependencies, please refer to Requirements . To learn more about BridgePRS see our complete Guide. Citation: Our Manuscript is in press at Nature Genetics Please cite our preprint : Hoggart C, Choi SW, Garc\u00eda-Gonz\u00e1lez J, Souaiaia T, Preuss M, O'Reilly P. BridgePRS : A powerful trans-ancestry Polygenic Risk Score method. bioRxiv (2023). doi: 10.1101/2023.02.17.528938.","title":"Information"},{"location":"#contact","text":"For questions about the methodology, this website, or our manuscript please contact Dr Clive Hoggart , Tade , or Dr Paul O'Reilly .","title":"Contact"},{"location":"#issues","text":"This wiki should cover basic usage for BridgePRS. If you have problems, please feel free to submit an issues here or visit our google group .","title":"Issues"},{"location":"#acknowledgements","text":"We would like to thank Brian Fulton Howard for his expert programming advice.","title":"Acknowledgements"},{"location":"guide_args/","text":"This page contains all command available in BridgePRS. Tips When constructing new parameters, we follow the following rule: if the command has effect on any file that is not the target, it will have a prefix of the file name. For example, --base-info applies INFO score filtering on the base file, --ld-info perform INFO score filtering on the LD reference file and --info applies the INFO score filtering on the target file. Input Population Files/Arguments --sumstats_prefix Path to sumstats data --phenotype_files phenotype test and validation data --pop_config(s) population configuration file(s) --pop or --pops population names (AFR, EUR, etc) --snp_file List of QCed SNP ids System Level Toggles/Arguments --cores By default bridgePRS is parralelized across (n-1) cores -o Output folder for BridgePRS --platform Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --noPlots Skip Post-Pipeline Analysis (Plotting) --restart Repeat previously completed steps Parameter Arguments --fst fst value --max_clump_size Max Size for Clumping --thinned_snplist Thinned snp list for large clumps Internal File Arguments --model_file model result generated from the build-model subprogram --clump_prefix prefix for files generated by clump step --eval_prefix prefix for files generated by eval step --optimize_prefix prefix for files generated by optimize step --predict_prefix prefix for files generated by predict step --results prs result files File Column Names Phenotype Files --phenotype Phenotype File Field: phenotype --covariates Phenotype File Field: covariates Sumstats Files --ssf-alt Sumstats Field: alt allele --ssf-beta Sumstats Field: beta --ssf-maf Sumstats Field: MAF --ssf-p Sumstats field: P-value --ssf-ref Sumstats Field: reference allele --ssf-se Sumstats field: standard error --ssf-snpid Sumstats field: snpID --ssf-ss Sumstats Field: Sample Size --sumstat_prefix path to sumstats file prefixes --sumstats_suffix Sumstats Suffix","title":"All Arguments"},{"location":"guide_args/#input-population-filesarguments","text":"--sumstats_prefix Path to sumstats data --phenotype_files phenotype test and validation data --pop_config(s) population configuration file(s) --pop or --pops population names (AFR, EUR, etc) --snp_file List of QCed SNP ids","title":"Input Population Files/Arguments"},{"location":"guide_args/#system-level-togglesarguments","text":"--cores By default bridgePRS is parralelized across (n-1) cores -o Output folder for BridgePRS --platform Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --noPlots Skip Post-Pipeline Analysis (Plotting) --restart Repeat previously completed steps","title":"System Level Toggles/Arguments"},{"location":"guide_args/#parameter-arguments","text":"--fst fst value --max_clump_size Max Size for Clumping --thinned_snplist Thinned snp list for large clumps","title":"Parameter Arguments"},{"location":"guide_args/#internal-file-arguments","text":"--model_file model result generated from the build-model subprogram --clump_prefix prefix for files generated by clump step --eval_prefix prefix for files generated by eval step --optimize_prefix prefix for files generated by optimize step --predict_prefix prefix for files generated by predict step --results prs result files","title":"Internal File Arguments"},{"location":"guide_args/#file-column-names","text":"","title":"File Column Names"},{"location":"guide_args/#phenotype-files","text":"--phenotype Phenotype File Field: phenotype --covariates Phenotype File Field: covariates","title":"Phenotype Files"},{"location":"guide_args/#sumstats-files","text":"--ssf-alt Sumstats Field: alt allele --ssf-beta Sumstats Field: beta --ssf-maf Sumstats Field: MAF --ssf-p Sumstats field: P-value --ssf-ref Sumstats Field: reference allele --ssf-se Sumstats field: standard error --ssf-snpid Sumstats field: snpID --ssf-ss Sumstats Field: Sample Size --sumstat_prefix path to sumstats file prefixes --sumstats_suffix Sumstats Suffix","title":"Sumstats Files"},{"location":"guide_background/","text":"BridgePRS is a trans-ancestry PRS software which improves polygenic risk score analysis in diverse populations. Calculating PRS using Ridge Regression Porting a PRS model from one population to another Using European data as a prior to improve PRS in diverse populations Results plotted in several formats Background You will need to have basic understanding of Genome Wide Association Studies (GWAS) and polygenic scoring (PRS) to be able to use BridgePRS. If you are unfamiliar with GWAS, you can consider reading this paper . If you have familiarity but need a crash refresher then reading the following section will be helpful. Single Population Analysis GWAS Genome wide association studies (GWAS) involve analyzing the genomes of a larger group of individuals. This involves looking screening millions of genetic variants (SNP) for association with a particular trait. For a binary trait (like blue or brown eyes) this involves comparing the frequency of genetic variations in each group to produce an odds-ratio (measure of association) and a p-value to measure the signficance of the realtionship at each SNP. For continuous measures (like height) this results in an effect size (measure of continuous association) and p-value that measure the significance of our relationship. GWAS results can be summarized in a sumstats file which looks like this: SNP BP REF ALT BETA PV NOTES rs3094315 10523 A G 1.491 0.0029 Positive ( \\(>1\\) ) Trait Association rs3131972 91345 A G 0.817 0.0008 Negative ( \\(<1\\) ) Trait Association rs3131971 23040 T C 1.001 0.5332 Insignificant ( \\(PV>0.05\\) ) Association PRS Creating individual polygenic scores involves combine information across many genetic variants. A score is calculated summing the genetic association values (beta-weights) for each allele in an individual. This means that variants with stronger associations have a larger impact on the overall score. Usually, variant selection and assignment of SNP weights are determined using a very large \"test dataset\" of individual genotypes and phenotypes and then validated on an out of sample dataset of genotypes and phenotypes. The correlation between the out of sample inidividual phenotypes and their predicted values (PRS scores) can be measured ( \\(R^2\\) ) to assess how predictive the PRS model is. Cross Population Analysis The PRS Portability Problem Often when PRS results from a large test population (usually of European ancestry) are validated to an out of sample population of different ancestry the PRS model is not predictive. Unfortunately, there is not enough data in the non-european population to produce a reliabile \"test dataset\" so researchers have to either accept either: An underpowered PRS model made using only the non-european population. A large PRS model based on European test data that doesn't perform well. The BridgePRS Solution BridgePRS solves this problem by first running producing three different PRS-models. PRS ran using only the primary (Non-European) dataset PRS ran using SNP-weights calculated from the European Model PRS ran using a prior effect-size distribution from the European Model Then BridgePRS combines these results to produce a weighted PRS solution.","title":"Background"},{"location":"guide_background/#background","text":"You will need to have basic understanding of Genome Wide Association Studies (GWAS) and polygenic scoring (PRS) to be able to use BridgePRS. If you are unfamiliar with GWAS, you can consider reading this paper . If you have familiarity but need a crash refresher then reading the following section will be helpful.","title":"Background"},{"location":"guide_background/#single-population-analysis","text":"GWAS Genome wide association studies (GWAS) involve analyzing the genomes of a larger group of individuals. This involves looking screening millions of genetic variants (SNP) for association with a particular trait. For a binary trait (like blue or brown eyes) this involves comparing the frequency of genetic variations in each group to produce an odds-ratio (measure of association) and a p-value to measure the signficance of the realtionship at each SNP. For continuous measures (like height) this results in an effect size (measure of continuous association) and p-value that measure the significance of our relationship. GWAS results can be summarized in a sumstats file which looks like this: SNP BP REF ALT BETA PV NOTES rs3094315 10523 A G 1.491 0.0029 Positive ( \\(>1\\) ) Trait Association rs3131972 91345 A G 0.817 0.0008 Negative ( \\(<1\\) ) Trait Association rs3131971 23040 T C 1.001 0.5332 Insignificant ( \\(PV>0.05\\) ) Association PRS Creating individual polygenic scores involves combine information across many genetic variants. A score is calculated summing the genetic association values (beta-weights) for each allele in an individual. This means that variants with stronger associations have a larger impact on the overall score. Usually, variant selection and assignment of SNP weights are determined using a very large \"test dataset\" of individual genotypes and phenotypes and then validated on an out of sample dataset of genotypes and phenotypes. The correlation between the out of sample inidividual phenotypes and their predicted values (PRS scores) can be measured ( \\(R^2\\) ) to assess how predictive the PRS model is.","title":"Single Population Analysis"},{"location":"guide_background/#cross-population-analysis","text":"The PRS Portability Problem Often when PRS results from a large test population (usually of European ancestry) are validated to an out of sample population of different ancestry the PRS model is not predictive. Unfortunately, there is not enough data in the non-european population to produce a reliabile \"test dataset\" so researchers have to either accept either: An underpowered PRS model made using only the non-european population. A large PRS model based on European test data that doesn't perform well. The BridgePRS Solution BridgePRS solves this problem by first running producing three different PRS-models. PRS ran using only the primary (Non-European) dataset PRS ran using SNP-weights calculated from the European Model PRS ran using a prior effect-size distribution from the European Model Then BridgePRS combines these results to produce a weighted PRS solution.","title":"Cross Population Analysis"},{"location":"guide_commands/","text":"Subprograms BridgePRS consists of five related multi-function subprograms: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS analyze combine Subprogram Input Subcommands Output prs-single Primary Pop Data clump,eval,test,predict prs-result build-model Model Pop Data clump,eval,test,prior model-params prs-port Primary Pop + Model Result port,predict prs-result prs-prior Primary Pop + Model Result inform,test,predict prs-result analyze PRS Result Files combine,plot weighted prs-result These programs can be called consecutively using the easyrun master-program which will create the following directory structure: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS result combine","title":"Subprograms"},{"location":"guide_commands/#subprograms","text":"BridgePRS consists of five related multi-function subprograms: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS analyze combine Subprogram Input Subcommands Output prs-single Primary Pop Data clump,eval,test,predict prs-result build-model Model Pop Data clump,eval,test,prior model-params prs-port Primary Pop + Model Result port,predict prs-result prs-prior Primary Pop + Model Result inform,test,predict prs-result analyze PRS Result Files combine,plot weighted prs-result These programs can be called consecutively using the easyrun master-program which will create the following directory structure:","title":"Subprograms"},{"location":"guide_commands/#1-bridgeprs-prs-single","text":"","title":"1) BridgePRS prs-single"},{"location":"guide_commands/#2-bridgeprs-build-model","text":"","title":"2) BridgePRS build-model"},{"location":"guide_commands/#3-bridgeprs-prs-port","text":"","title":"3) BridgePRS prs-port"},{"location":"guide_commands/#4-bridgeprs-prs-prior","text":"","title":"4) BridgePRS prs-prior"},{"location":"guide_commands/#5-bridgeprs-result-combine","text":"","title":"5) BridgePRS result combine"},{"location":"guide_customization/","text":"Input Data LD Reference Data: Custom Data BridgePRS estimates SNP-specific LD in the clumping step from multi-population target data in PLINK binary format. BridgePRS includes sample thousand genome data ( BRIDGEDIR/data/kg_sample ) for super-groups (AFR and EUR). A full dataset and corresponding population-id lists ( AFR.ids.txt , EUR.ids.txt , EAS.ids.txt , SAS.ids.txt ) can be downloaded here and unzipped into BRIDGEDIR/data/kg_ref to enable full use of BridgePRS for the above populations (AFR, EUR, EAS, SAS). To pass user supplied LD reference data, for a custom population named POP , please create folder (named pop_ld ) which includes: A .bed , .bim , and .fam file for each chromosome with format \"chr\"[1-22]\".ext\" POP.ids.txt , a txt file that lists all the sample IDs for your population Then use the command line argument --ldPath to point to the location of this folder on your computer.","title":"Customization"},{"location":"guide_customization/#input-data","text":"","title":"Input Data"},{"location":"guide_customization/#ld-reference-data-custom-data","text":"BridgePRS estimates SNP-specific LD in the clumping step from multi-population target data in PLINK binary format. BridgePRS includes sample thousand genome data ( BRIDGEDIR/data/kg_sample ) for super-groups (AFR and EUR). A full dataset and corresponding population-id lists ( AFR.ids.txt , EUR.ids.txt , EAS.ids.txt , SAS.ids.txt ) can be downloaded here and unzipped into BRIDGEDIR/data/kg_ref to enable full use of BridgePRS for the above populations (AFR, EUR, EAS, SAS). To pass user supplied LD reference data, for a custom population named POP , please create folder (named pop_ld ) which includes: A .bed , .bim , and .fam file for each chromosome with format \"chr\"[1-22]\".ext\" POP.ids.txt , a txt file that lists all the sample IDs for your population Then use the command line argument --ldPath to point to the location of this folder on your computer.","title":"LD Reference Data: Custom Data"},{"location":"guide_input/","text":"Input Data LD Reference Data: 1000 Genomes BridgePRS estimates SNP-specific LD in the clumping step from an population target data in PLINK binary format. By default, the main BridgePRS includes a sample LD reference panel ( BRIDGEDIR/data/1000G_sample ) for population super-groups AFR and EUR that is suitable for the quick start tutorial . A folder containing the full 1000 Genomes LD reference panel for populations AFR , EUR , EAS , SAS , and AMR can be downloaded here and unzipped into BRIDGEDIR/data/1000G_ref to enable full usage of BridgePRS. To run BridgePRS using a custom LD reference please see customization . Trait Data: GWAS Sumstats and Phenotype Data Primary Data For the primary population (where the trait is being estimated) BridgePRS requires GWAS summary stats and two phenotype files (for test and validation): Name Command Line flag Required Description Sumstats --sumstats_prefix Yes GWAS Summary Statsd Phenotypes --phenotype_files Primary Pop Only Test And Validation Phenotype Files Snp List --snp_file No List QCed SNP ids Creating a Configuration File The following command will validate the input data supplied on the command line ./bridgePRS check data -o out --pop AFR --sumstats_prefix data/pop_africa/sumstats/afr.chr --phenotype_files data/pop_africa/phenotypes/afr_test.dat data/pop_africa/phenotypes/afr_validation.dat And produce a configuration file for an african population that mirrors the supplied configuration file: $ cat data/afr_cont.config . ... POP = AFR SUMSTATS_PREFIX = pop_africa / sumstats / afr.chr PHENOTYPE_FILES = pop_africa / phenotypes / afr_test.dat,pop_africa / phenotypes / afr_validation.dat SNP_FILE = pop_africa / snps.txt Model Population For the model population (used to produce prior distributions) BridgePRS requries GWAS summary stats and one phenotype file (if available). If it is not available then the test file from the primary population can be substituted, as shown in the two configuration files: With Phenotype Data POP = EUR SUMSTATS_PREFIX = pop_europe / sumstats / eur.chr PHENOTYPE_FILES = pop_europe / phenotypes / eur_test.dat SNP_FILE = pop_europe / snps.txt Without Phenotype Data POP = EUR SUMSTATS_PREFIX = pop_europe / sumstats / eur.chr PHENOTYPE_FILES = pop_africa / phenotypes / afr_test.dat SNP_FILE = pop_europe / snps.txt File Specifications 1) Sumstats Data GWAS summary statistics can be provided using a prefix to multiple chromosome separated files with the --sumstats_prefix flag or with using a single sumstats file with the --sumstats_file flag. If a prefix is given, then a suffix can be provided as well --sumstats_suffix . GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix) or splitting the file by chromosome if necessary. An example of a sumstats file with default column headers is shown: #CHROM POS ID REF ALT A1 A1_FREQ TEST OBS_CT BETA SE T_STAT P ERRCODE 1 754105 rs12184325 T C G 0.0257573 ADD 4853 0.820864 0.413692 1.98424 0.0472871 . 1 840753 rs4970382 C T G 0.483495 ADD 4847 0.0011142 0.128347 0.00868116 0.993074 . 1 958905 rs2710890 G A G 0.424387 ADD 4814 0.108094 0.132225 0.817497 0.413687 . Column headers can be specified on the command line or in a configuration file using --ssf flags: ( --ssf-chr , --ssf-p , --ssf-snpid , --ssf-se , --ssf-ss , --ssf-beta , --ssf-ref , --ssf-alt , --ssf-maf .) Flag --ssf-chr --ssf-snpid --ssf-ref --ssf-alt --ssf-maf --ssf-ss --ssf-beta --ssf-se --ssf-p Default #CHROM ID REF A1 A1_FREQ OBS_CT BETA SE P 2) Phenotype Files Phenotype files can be provided to BridgePRS using the --phenotype_files flag. This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, and the rest can be phenotypes/covariates: FID IID y y.binary PC1 PC2 afr1_1 afr2_1 24.4 1 0.53 0.950 afr1_2 afr2_2 4.10 0 0.59 0.450 afr1_3 afr2_3 37.2 1 0.73 -0.13 afr1_4 afr2_4 5.40 0 0.44 -0.55 The phenotype of interest can be specified with the --phenotype flag and the covariates can be given as a comma separated list after the --covariates flag: ``` ./bridgePRS check data -o out --pop AFR --phenotype y --covariates PC1,PC2 --phenotype_files data/pop_africa/phenotypes/afr_test.dat data/pop_africa/phenotypes/afr_validation.dat ``` Warning The column name(s) should not contain space nor comma 3) QC SNP List To select only SNPS that have passed QC, you can provide a file using the --snp_file flag.","title":"Input Data"},{"location":"guide_input/#input-data","text":"","title":"Input Data"},{"location":"guide_input/#ld-reference-data-1000-genomes","text":"BridgePRS estimates SNP-specific LD in the clumping step from an population target data in PLINK binary format. By default, the main BridgePRS includes a sample LD reference panel ( BRIDGEDIR/data/1000G_sample ) for population super-groups AFR and EUR that is suitable for the quick start tutorial . A folder containing the full 1000 Genomes LD reference panel for populations AFR , EUR , EAS , SAS , and AMR can be downloaded here and unzipped into BRIDGEDIR/data/1000G_ref to enable full usage of BridgePRS. To run BridgePRS using a custom LD reference please see customization .","title":"LD Reference Data: 1000 Genomes"},{"location":"guide_input/#trait-data-gwas-sumstats-and-phenotype-data","text":"Primary Data For the primary population (where the trait is being estimated) BridgePRS requires GWAS summary stats and two phenotype files (for test and validation): Name Command Line flag Required Description Sumstats --sumstats_prefix Yes GWAS Summary Statsd Phenotypes --phenotype_files Primary Pop Only Test And Validation Phenotype Files Snp List --snp_file No List QCed SNP ids Creating a Configuration File The following command will validate the input data supplied on the command line ./bridgePRS check data -o out --pop AFR --sumstats_prefix data/pop_africa/sumstats/afr.chr --phenotype_files data/pop_africa/phenotypes/afr_test.dat data/pop_africa/phenotypes/afr_validation.dat And produce a configuration file for an african population that mirrors the supplied configuration file: $ cat data/afr_cont.config . ... POP = AFR SUMSTATS_PREFIX = pop_africa / sumstats / afr.chr PHENOTYPE_FILES = pop_africa / phenotypes / afr_test.dat,pop_africa / phenotypes / afr_validation.dat SNP_FILE = pop_africa / snps.txt Model Population For the model population (used to produce prior distributions) BridgePRS requries GWAS summary stats and one phenotype file (if available). If it is not available then the test file from the primary population can be substituted, as shown in the two configuration files: With Phenotype Data POP = EUR SUMSTATS_PREFIX = pop_europe / sumstats / eur.chr PHENOTYPE_FILES = pop_europe / phenotypes / eur_test.dat SNP_FILE = pop_europe / snps.txt Without Phenotype Data POP = EUR SUMSTATS_PREFIX = pop_europe / sumstats / eur.chr PHENOTYPE_FILES = pop_africa / phenotypes / afr_test.dat SNP_FILE = pop_europe / snps.txt","title":"Trait Data: GWAS Sumstats and Phenotype Data"},{"location":"guide_input/#file-specifications","text":"","title":"File Specifications"},{"location":"guide_input/#1-sumstats-data","text":"GWAS summary statistics can be provided using a prefix to multiple chromosome separated files with the --sumstats_prefix flag or with using a single sumstats file with the --sumstats_file flag. If a prefix is given, then a suffix can be provided as well --sumstats_suffix . GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix) or splitting the file by chromosome if necessary. An example of a sumstats file with default column headers is shown: #CHROM POS ID REF ALT A1 A1_FREQ TEST OBS_CT BETA SE T_STAT P ERRCODE 1 754105 rs12184325 T C G 0.0257573 ADD 4853 0.820864 0.413692 1.98424 0.0472871 . 1 840753 rs4970382 C T G 0.483495 ADD 4847 0.0011142 0.128347 0.00868116 0.993074 . 1 958905 rs2710890 G A G 0.424387 ADD 4814 0.108094 0.132225 0.817497 0.413687 . Column headers can be specified on the command line or in a configuration file using --ssf flags: ( --ssf-chr , --ssf-p , --ssf-snpid , --ssf-se , --ssf-ss , --ssf-beta , --ssf-ref , --ssf-alt , --ssf-maf .) Flag --ssf-chr --ssf-snpid --ssf-ref --ssf-alt --ssf-maf --ssf-ss --ssf-beta --ssf-se --ssf-p Default #CHROM ID REF A1 A1_FREQ OBS_CT BETA SE P","title":"1) Sumstats Data"},{"location":"guide_input/#2-phenotype-files","text":"Phenotype files can be provided to BridgePRS using the --phenotype_files flag. This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, and the rest can be phenotypes/covariates: FID IID y y.binary PC1 PC2 afr1_1 afr2_1 24.4 1 0.53 0.950 afr1_2 afr2_2 4.10 0 0.59 0.450 afr1_3 afr2_3 37.2 1 0.73 -0.13 afr1_4 afr2_4 5.40 0 0.44 -0.55 The phenotype of interest can be specified with the --phenotype flag and the covariates can be given as a comma separated list after the --covariates flag: ``` ./bridgePRS check data -o out --pop AFR --phenotype y --covariates PC1,PC2 --phenotype_files data/pop_africa/phenotypes/afr_test.dat data/pop_africa/phenotypes/afr_validation.dat ``` Warning The column name(s) should not contain space nor comma","title":"2) Phenotype Files"},{"location":"guide_input/#3-qc-snp-list","text":"To select only SNPS that have passed QC, you can provide a file using the --snp_file flag.","title":"3) QC SNP List"},{"location":"guide_output/","text":"Output Data For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat yo Summary Result .snp_weights.dat Snp weights The column headers correspond to the following: 1) SNP Weights BridgePRS provides outfile files of SNP weights. SNP CHR BP A1 A2 OR SE P rs3094315 1 752566 A G 0.9912 0.0229 0.7009 rs3131972 1 752721 A G 1.007 0.0228 0.769 rs3131971 1 752894 T C 1.003 0.0232 0.8962","title":"Output Data"},{"location":"guide_output/#output-data","text":"For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat yo Summary Result .snp_weights.dat Snp weights The column headers correspond to the following:","title":"Output Data"},{"location":"guide_output/#1-snp-weights","text":"BridgePRS provides outfile files of SNP weights. SNP CHR BP A1 A2 OR SE P rs3094315 1 752566 A G 0.9912 0.0229 0.7009 rs3131972 1 752721 A G 1.007 0.0228 0.769 rs3131971 1 752894 T C 1.003 0.0232 0.8962","title":"1) SNP Weights"},{"location":"guide_requirements/","text":"Requirements BridgePRS depends on R, plink, and a python wrapper. Installation is described in detail in the following sections. Alternatively, if python3+ is already available, the BridgePRS installer can be used to automate the process. R BridgePRS requires the following R [ version 3.6.3+ ] ( Download ) packages: BEDMatrix, boot, data.table, doMC, glmnet, MASS, optparse, parallel, and R.utils R Packages These packages can be installed from inside an R terminal using the command: $ R > install.packages(c(\"BEDMatrix\",\"boot\",\"data.table\",\"doMC\",\"glmnet\",\"MASS\",\"optparse\",\"parallel\",\"R.utils\")) Plink BridgePRS requires a version of plink compatible with your machine. ( download ) By default BridgePRS includes a version of plink for Linux and MacOs and will attempt to locate the correct version. To override this behavior and use a specific version of plink please use the flag --plinkPath $PLINKPATH to direct BridgePRS to the file location. Extra MacOs Security: MacOs often block executables if they are not approved from the app store. You may have to change your settings to allow Plink to be called Python The BridgePRS wrapper requires python3+ ( download ) and matplotlib package ( download ) is required to create plots (options). If python3+ is not available, BridgePRS can be ran using shell scripts, as described in the README file. If python3+ is available, all other dependencies can be ran using the BridgePRS BridgePRS Installer The BridgePRS Installer If BridgePRS has been downloaded and made executable (as described in our quickstart tutorial ) then the following command can be used to allow bridgePRS to check system compatibility and prompt you to install missing software: $ ./bridgePRS check requirements BridgePRS Begins... Bridge Command-Line: ../../bridgePRS check requirements Module: check Command: requirements System: cores=7, platform=linux, plinkpath=src/Python/Xtra, rpath=src/Rscripts Options: fst=0.15, outpath=out, tgpath=/home/tade/Current/bridgePRS/repo/BridgePRS/data/sampleKg JOB1: Checking Requirements..................................................... Python Found: /usr/bin/python3 Matplotlib: Found R Found: /usr/bin/R R Version: 3.6.3 R packages: Up To Date Complete","title":"Requirements"},{"location":"guide_requirements/#requirements","text":"BridgePRS depends on R, plink, and a python wrapper. Installation is described in detail in the following sections. Alternatively, if python3+ is already available, the BridgePRS installer can be used to automate the process.","title":"Requirements"},{"location":"guide_requirements/#r","text":"BridgePRS requires the following R [ version 3.6.3+ ] ( Download ) packages: BEDMatrix, boot, data.table, doMC, glmnet, MASS, optparse, parallel, and R.utils R Packages These packages can be installed from inside an R terminal using the command: $ R > install.packages(c(\"BEDMatrix\",\"boot\",\"data.table\",\"doMC\",\"glmnet\",\"MASS\",\"optparse\",\"parallel\",\"R.utils\"))","title":"R"},{"location":"guide_requirements/#plink","text":"BridgePRS requires a version of plink compatible with your machine. ( download ) By default BridgePRS includes a version of plink for Linux and MacOs and will attempt to locate the correct version. To override this behavior and use a specific version of plink please use the flag --plinkPath $PLINKPATH to direct BridgePRS to the file location. Extra MacOs Security: MacOs often block executables if they are not approved from the app store. You may have to change your settings to allow Plink to be called","title":"Plink"},{"location":"guide_requirements/#python","text":"The BridgePRS wrapper requires python3+ ( download ) and matplotlib package ( download ) is required to create plots (options). If python3+ is not available, BridgePRS can be ran using shell scripts, as described in the README file. If python3+ is available, all other dependencies can be ran using the BridgePRS","title":"Python"},{"location":"guide_requirements/#bridgeprs-installer","text":"The BridgePRS Installer If BridgePRS has been downloaded and made executable (as described in our quickstart tutorial ) then the following command can be used to allow bridgePRS to check system compatibility and prompt you to install missing software: $ ./bridgePRS check requirements BridgePRS Begins... Bridge Command-Line: ../../bridgePRS check requirements Module: check Command: requirements System: cores=7, platform=linux, plinkpath=src/Python/Xtra, rpath=src/Rscripts Options: fst=0.15, outpath=out, tgpath=/home/tade/Current/bridgePRS/repo/BridgePRS/data/sampleKg JOB1: Checking Requirements..................................................... Python Found: /usr/bin/python3 Matplotlib: Found R Found: /usr/bin/R R Version: 3.6.3 R packages: Up To Date Complete","title":"BridgePRS Installer"},{"location":"guide_shell/","text":"Using BridgePRS without Python Explain this.","title":"Using Bash"},{"location":"guide_shell/#using-bridgeprs-without-python","text":"Explain this.","title":"Using BridgePRS without Python"},{"location":"mac_specific/","text":"Plink: Developer Cannot Be Verified If you see this error, Do not click: Move To Trash . Instead click on the top right hand corner of the box, or stop running BridgePRS and follow these instructions to give your system permission to call plink from BridgePRS: 1- Default Settings By default macOS allows you to open apps from the official Mac App Store only, If you have this set as your default you can change this if you: Open System Preferences. Go to the Security & Privacy tab. Click on the lock and enter your password. Change settings to include identified developers (see below): 2- Allowing Exceptions Expanding permissions to include \"identified developers\" is required but not sufficient. To obtain further permission to run Plink or any other unapproved program you can: Open System Preferences. Go to Security & Privacy and select the General tab. If this has happened within the hour, this page will give you an override button to open Open Anyway . Enter you password as above and click this button. You will be asked to once more which will create an exception allowing you to run Plink in the future. 3- Downstream BridgePRS Errors If you have moved plink to the trash you will have to recover it, additionally the empty files created by a failed attempt to run Plink can cause problems if BridgePRS tries to recover your progress. Restarting a bridgePRS run You can avoid this problem by manually deleting your output directory and starting over, or by using the restart flag: $./bridgePRS easyrun go -o out1 --pop_configs data/afr.config data/eur.config --phenotype y --restart This will force bridgePRS to restart every subprogram from the beginning.","title":"Mac specific"},{"location":"mac_specific/#plink-developer-cannot-be-verified","text":"If you see this error, Do not click: Move To Trash . Instead click on the top right hand corner of the box, or stop running BridgePRS and follow these instructions to give your system permission to call plink from BridgePRS:","title":"Plink: Developer Cannot Be Verified"},{"location":"mac_specific/#1-default-settings","text":"By default macOS allows you to open apps from the official Mac App Store only, If you have this set as your default you can change this if you: Open System Preferences. Go to the Security & Privacy tab. Click on the lock and enter your password. Change settings to include identified developers (see below):","title":"1- Default Settings"},{"location":"mac_specific/#2-allowing-exceptions","text":"Expanding permissions to include \"identified developers\" is required but not sufficient. To obtain further permission to run Plink or any other unapproved program you can: Open System Preferences. Go to Security & Privacy and select the General tab. If this has happened within the hour, this page will give you an override button to open Open Anyway . Enter you password as above and click this button. You will be asked to once more which will create an exception allowing you to run Plink in the future.","title":"2- Allowing Exceptions"},{"location":"mac_specific/#3-downstream-bridgeprs-errors","text":"If you have moved plink to the trash you will have to recover it, additionally the empty files created by a failed attempt to run Plink can cause problems if BridgePRS tries to recover your progress. Restarting a bridgePRS run You can avoid this problem by manually deleting your output directory and starting over, or by using the restart flag: $./bridgePRS easyrun go -o out1 --pop_configs data/afr.config data/eur.config --phenotype y --restart This will force bridgePRS to restart every subprogram from the beginning.","title":"3- Downstream BridgePRS Errors"},{"location":"misc_faq/","text":"Frequently Asked Questions We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_faq/#frequently-asked-questions","text":"We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_log/","text":"Update Log 2023-08-15 v0.1.7 Added Sample Thousand Genomes Data. 2023-08-05 v0.1.7 Identified and fixed a bug for binary traits.","title":"Update Log"},{"location":"misc_log/#update-log","text":"","title":"Update Log"},{"location":"misc_log/#2023-08-15-v017","text":"Added Sample Thousand Genomes Data.","title":"2023-08-15 v0.1.7"},{"location":"misc_log/#2023-08-05-v017","text":"Identified and fixed a bug for binary traits.","title":"2023-08-05 v0.1.7"},{"location":"quikstart_demo/","text":"Configuration Files After installing and verfying the requirements , verify the contents of the configuration files used in this tutorial: target: data/afr.config POP = AFR LDPOP = AFR SUMSTATS_PREFIX = pop_africa / sumstats / eur.chr GENOTYPE_PREFIX = pop_africa / genotypes / afr_genotypes PHENOTYPE_FILES = pop_africa / phenotypes / afr_test.dat,pop_africa / phenotypes / afr_validation.dat SNP_FILE = pop_europe / snps.txt model: data/eur.config POP = EUR LDPOP = EUR SUMSTATS_PREFIX = pop_europe / sumstats / eur.chr GENOTYPE_PREFIX = pop_europe / genotypes / eur_genotypes PHENOTYPE_FILES = pop_europe / phenotypes / eur_test.dat SNP_FILE = pop_europe / snps.txt These files contain enough information to run BridgePRS on any variable included in the phenotype files: 1) Continuous Trait [ \"y\" ] Easyrun Command Run BridgePRS on the toy phenotype \"y\" with the following command: ./bridgePRS easyrun go -o out1 --pop_configs data/afr.config data/eur.config --phenotype y A summary figure will be created in out1/bridgeSummary.png : 2) Binary Trait [ \"y.binary\" ] Easyrun Command Run BridgePRS on the toy binary phenotype \"y.binary\" with the following command: ./bridgePRS easyrun go -o out2 --pop_configs data/afr.config data/eur.config --phenotype y.binary A summary figure will be created in out2/bridgeSummary.png :","title":"Demo"},{"location":"quikstart_demo/#configuration-files","text":"After installing and verfying the requirements , verify the contents of the configuration files used in this tutorial: target: data/afr.config POP = AFR LDPOP = AFR SUMSTATS_PREFIX = pop_africa / sumstats / eur.chr GENOTYPE_PREFIX = pop_africa / genotypes / afr_genotypes PHENOTYPE_FILES = pop_africa / phenotypes / afr_test.dat,pop_africa / phenotypes / afr_validation.dat SNP_FILE = pop_europe / snps.txt model: data/eur.config POP = EUR LDPOP = EUR SUMSTATS_PREFIX = pop_europe / sumstats / eur.chr GENOTYPE_PREFIX = pop_europe / genotypes / eur_genotypes PHENOTYPE_FILES = pop_europe / phenotypes / eur_test.dat SNP_FILE = pop_europe / snps.txt These files contain enough information to run BridgePRS on any variable included in the phenotype files:","title":"Configuration Files"},{"location":"quikstart_demo/#1-continuous-trait-y","text":"Easyrun Command Run BridgePRS on the toy phenotype \"y\" with the following command: ./bridgePRS easyrun go -o out1 --pop_configs data/afr.config data/eur.config --phenotype y A summary figure will be created in out1/bridgeSummary.png :","title":"1) Continuous Trait [ \"y\" ]"},{"location":"quikstart_demo/#2-binary-trait-ybinary","text":"Easyrun Command Run BridgePRS on the toy binary phenotype \"y.binary\" with the following command: ./bridgePRS easyrun go -o out2 --pop_configs data/afr.config data/eur.config --phenotype y.binary A summary figure will be created in out2/bridgeSummary.png :","title":"2) Binary Trait [ \"y.binary\" ]"},{"location":"quikstart_prep/","text":"1) Preparation After downloading and unzipping BridgePRS into a suitable directory on your machine (referred to as $BridgeDir ) you will observe the following file structure: $ ls . bridgePRS data / src / LICENSE README.md Using the terminal, type the following command from within the directory: chmod +x bridgePRS chmod +x src/Python/Xtra/plink* to make bridgePRS and plink executable Extra MacOs Security: MacOs often block executables if they are not approved from the app store. If you see a similar msg: You will have to change your system settings to allow bridgePRS to call plink, for more information about how to solve this problem, please click here . 2) Requirements Next, confirm that the required libraries and binaries are installed and available by the instructions in Requirements. Alternatively, you can type: $./bridgePRS check requirements and bridgePRS to check your system and prompt/direct you to install any missing dependencies. 3) Toy Data This tutorial uses the sample configuration files located in the data directory: A primary (smaller sample size) population ( data/afr.config ) of \"AFR\" ancestry. A model (larger sample size) population ( data/eur.config ) of \"EUR\" ancestry. For more information on configuration files, see Input Data , or go to the next page.","title":"Prep"},{"location":"quikstart_prep/#1-preparation","text":"After downloading and unzipping BridgePRS into a suitable directory on your machine (referred to as $BridgeDir ) you will observe the following file structure: $ ls . bridgePRS data / src / LICENSE README.md Using the terminal, type the following command from within the directory: chmod +x bridgePRS chmod +x src/Python/Xtra/plink* to make bridgePRS and plink executable Extra MacOs Security: MacOs often block executables if they are not approved from the app store. If you see a similar msg: You will have to change your system settings to allow bridgePRS to call plink, for more information about how to solve this problem, please click here .","title":"1) Preparation"},{"location":"quikstart_prep/#2-requirements","text":"Next, confirm that the required libraries and binaries are installed and available by the instructions in Requirements. Alternatively, you can type: $./bridgePRS check requirements and bridgePRS to check your system and prompt/direct you to install any missing dependencies.","title":"2) Requirements"},{"location":"quikstart_prep/#3-toy-data","text":"This tutorial uses the sample configuration files located in the data directory: A primary (smaller sample size) population ( data/afr.config ) of \"AFR\" ancestry. A model (larger sample size) population ( data/eur.config ) of \"EUR\" ancestry. For more information on configuration files, see Input Data , or go to the next page.","title":"3) Toy Data"},{"location":"quikstart_result/","text":"Interpreting Results The easyrun command sequentially runs the five subprograms described in detail in our here and the output directory (eg. out1 and out2 ): prs-single: Run PRS using the primary population only (AFR). build-model: Estimate SNP weights & prior params from model pop (EUR). prs-port: Run target-PRS using the model snp weights. prs-prior: Run target-PRS using model prior distributions. analyze combine Combine results to produce a weighted target PRS result. And produces output in the following five subdirectories: prs-single_AFR/quantify/: Weights/Predictions (*snp_weights.dat, *preds.dat) model_EUR/prior: Model Priors prs-port_AFR/quantify/: Weights/Predictions (*snp_weights.dat, *preds.dat) prs-prior_AFR/quantify/: Weights/Predictions (*snp_weights.dat, *preds.dat) prs-combined_AFR/: Weights/Predictions (*snp_weights.dat, *preds.dat) The directory structure created by this command is shown below: FR","title":"Result"},{"location":"quikstart_result/#interpreting-results","text":"The easyrun command sequentially runs the five subprograms described in detail in our here and the output directory (eg. out1 and out2 ): prs-single: Run PRS using the primary population only (AFR). build-model: Estimate SNP weights & prior params from model pop (EUR). prs-port: Run target-PRS using the model snp weights. prs-prior: Run target-PRS using model prior distributions. analyze combine Combine results to produce a weighted target PRS result. And produces output in the following five subdirectories: prs-single_AFR/quantify/: Weights/Predictions (*snp_weights.dat, *preds.dat) model_EUR/prior: Model Priors prs-port_AFR/quantify/: Weights/Predictions (*snp_weights.dat, *preds.dat) prs-prior_AFR/quantify/: Weights/Predictions (*snp_weights.dat, *preds.dat) prs-combined_AFR/: Weights/Predictions (*snp_weights.dat, *preds.dat) The directory structure created by this command is shown below: FR","title":"Interpreting Results"},{"location":"quikstart_training/","text":"Training In the previous two examples the target population was a non-specific African ( AFR ) population and the model population was European ( EUR ). In these examples each population had a corresponding: LD Reference Panel (Used for Clumping) GWAS Summary Stats Genotype/Phenotype Data This example may be unrealistic given real-world constraints and the realities of data sharing. Here we will consider will consider using BridgePRS in more realistic scenarios. The data for these challenges is included in data/challenges/ . Challenge 1: I have access to genotype/phenotype data (<1000 samples, continuous phenotype) from a diverse population in Central Africa (data/challenges/CAF). I would like ot run PRS as accurately as possible, but my dataset is not large enough to conduct GWAS, and the only available data is: Moderately sized GWAS in a moderately related West African population ( /data/challenges/yoruba/sumstats/ ) Large GWAS run in a distantly related European population ( data/challenges/UKB/sumstats ) Target Config File POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = pop_caf / phenotypes / caf_genotypes PHENOTYPE_FILES = pop_caf / phenotypes / caf_test.dat,pop_caf / phenotypes / caf_validation.dat [Answer] POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = pop_caf / phenotypes / caf_genotypes PHENOTYPE_FILES = pop_caf / phenotypes / caf_test.dat,pop_caf / phenotypes / caf_validation.dat Model Config FIle POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILES = Answer POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = pop_caf / phenotypes / caf_genotypes PHENOTYPE_FILES = pop_caf / phenotypes / caf_test.dat Challenge 1: I have access to genotype/phenotype data (<1000 samples, continuous phenotype) from a diverse population in Central Africa (data/challenges/CAF). I would like ot run PRS as accurately as possible, but my dataset is not large enough to conduct GWAS, and the only available data is: Moderately sized GWAS in a moderately related West African population ( /data/challenges/yoruba/sumstats/ ) Large GWAS run in a distantly related European population ( data/challenges/UKB/sumstats ) Target Config File ```R POP= LDPOP=","title":"Training"},{"location":"quikstart_training/#training","text":"In the previous two examples the target population was a non-specific African ( AFR ) population and the model population was European ( EUR ). In these examples each population had a corresponding: LD Reference Panel (Used for Clumping) GWAS Summary Stats Genotype/Phenotype Data This example may be unrealistic given real-world constraints and the realities of data sharing. Here we will consider will consider using BridgePRS in more realistic scenarios. The data for these challenges is included in data/challenges/ .","title":"Training"},{"location":"quikstart_training/#challenge-1","text":"I have access to genotype/phenotype data (<1000 samples, continuous phenotype) from a diverse population in Central Africa (data/challenges/CAF). I would like ot run PRS as accurately as possible, but my dataset is not large enough to conduct GWAS, and the only available data is: Moderately sized GWAS in a moderately related West African population ( /data/challenges/yoruba/sumstats/ ) Large GWAS run in a distantly related European population ( data/challenges/UKB/sumstats ) Target Config File POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = pop_caf / phenotypes / caf_genotypes PHENOTYPE_FILES = pop_caf / phenotypes / caf_test.dat,pop_caf / phenotypes / caf_validation.dat [Answer] POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = pop_caf / phenotypes / caf_genotypes PHENOTYPE_FILES = pop_caf / phenotypes / caf_test.dat,pop_caf / phenotypes / caf_validation.dat Model Config FIle POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = PHENOTYPE_FILES = Answer POP = LDPOP = SUMSTATS_PREFIX = GENOTYPE_PREFIX = pop_caf / phenotypes / caf_genotypes PHENOTYPE_FILES = pop_caf / phenotypes / caf_test.dat","title":"Challenge 1:"},{"location":"quikstart_training/#challenge-1_1","text":"I have access to genotype/phenotype data (<1000 samples, continuous phenotype) from a diverse population in Central Africa (data/challenges/CAF). I would like ot run PRS as accurately as possible, but my dataset is not large enough to conduct GWAS, and the only available data is: Moderately sized GWAS in a moderately related West African population ( /data/challenges/yoruba/sumstats/ ) Large GWAS run in a distantly related European population ( data/challenges/UKB/sumstats ) Target Config File ```R POP= LDPOP=","title":"Challenge 1:"}]}