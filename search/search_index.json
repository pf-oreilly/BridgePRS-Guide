{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BridgePRS is a trans-ancestry software that improves PRS in diverse populations. Package Downloads Operating System Link Linux 64-bit v2.3.3 Mac 64-bit v2.3.3 Windows Not available Latest Update 2023-08-05 (v0.1.7) Thanks to user Brian, we were able to fix a bug in our binary model! update log can be found here Quick Start To get started right away using supplied toy data, please use our Quick Start Tutorial. Requirements BridgePRS depends on R libraries and python3. For more refer to Requirements. Detailed Guide Our detailed documentation is included in our complete Guide. Citation Please cite our BridgePRS manuscript: Hoggart C, Choi SW, Garc\u00eda-Gonz\u00e1lez J, Souaiaia T, Preuss M, O'Reilly P. BridgePRS : A powerful trans-ancestry Polygenic Risk Score method. bioRxiv [Preprint]. 2023 Feb 21:2023.02.17.528938. doi: 10.1101/2023.02.17.528938. PMID: 36865148; PMCID: PMC9979992. Support This wiki should contain all the basic instruction for the use of BridgePRS. If you have problems, please feel free to start an issue here or visit our google group .","title":"Home"},{"location":"#package-downloads","text":"Operating System Link Linux 64-bit v2.3.3 Mac 64-bit v2.3.3 Windows Not available Latest Update","title":"Package Downloads"},{"location":"#2023-08-05-v017","text":"Thanks to user Brian, we were able to fix a bug in our binary model! update log can be found here","title":"2023-08-05 (v0.1.7)"},{"location":"#quick-start","text":"To get started right away using supplied toy data, please use our Quick Start Tutorial.","title":"Quick Start"},{"location":"#requirements","text":"BridgePRS depends on R libraries and python3. For more refer to Requirements.","title":"Requirements"},{"location":"#detailed-guide","text":"Our detailed documentation is included in our complete Guide. Citation Please cite our BridgePRS manuscript: Hoggart C, Choi SW, Garc\u00eda-Gonz\u00e1lez J, Souaiaia T, Preuss M, O'Reilly P. BridgePRS : A powerful trans-ancestry Polygenic Risk Score method. bioRxiv [Preprint]. 2023 Feb 21:2023.02.17.528938. doi: 10.1101/2023.02.17.528938. PMID: 36865148; PMCID: PMC9979992.","title":"Detailed Guide"},{"location":"#support","text":"This wiki should contain all the basic instruction for the use of BridgePRS. If you have problems, please feel free to start an issue here or visit our google group .","title":"Support"},{"location":"about/","text":"BridgePRS is a trans-ancestry PRS software which improves polygenic risk score analysis in diverse populations. Calculating PRS using Ridge Regression Porting a PRS model from one population to another Using European data as a prior to improve PRS in diverse populations Results plotted in several formats Citation Please cite our publication in Nature Genetics: BridgePRS Authors For more details on the authors, see: Dr Clive Hoggart Tade Dr Paul O'Reilly Acknowledgement BridgePRS is a software package written in R (main) and Python (wrapper, plotting). The code relies on PLINK by Christopher Chang .","title":"About"},{"location":"about/#authors","text":"For more details on the authors, see: Dr Clive Hoggart Tade Dr Paul O'Reilly","title":"Authors"},{"location":"about/#acknowledgement","text":"BridgePRS is a software package written in R (main) and Python (wrapper, plotting). The code relies on PLINK by Christopher Chang .","title":"Acknowledgement"},{"location":"detail_args/","text":"Available Commands This page contains all command available in PRSice. Tips When constructing new parameters, we follow the following rule: if the command has effect on any file that is not the target, it will have a prefix of the file name. For example, --base-info applies INFO score filtering on the base file, --ld-info perform INFO score filtering on the LD reference file and --info applies the INFO score filtering on the target file. Input Population Files/Arguments --bfile_prefix path to bfile prefix --id_file sample id file --pheno_file phenotype test data --snp_file snp file --validation_file phenotype validation data --pop_config POP_CONFIG --pop_configs POP_CONFIGS POP_CONFIGS --pop_names POP_NAMES POP_NAMES -p POPNAME Population Name System Level Toggles/Arguments --cores By default bridgePRS is parralelized across (n-1) -o OUTPATH Output path for bridgePRS --platform PLATFORM Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --skipAnalysis Skip Post-Pipeline Analysis --repeatSteps Toggle Repeat Pipeline Steps On --spec SPEC [SPEC ...], --specifications SPEC [SPEC ...] Parameter Arguments --fst fst value --max_clump_size Max Size for Clumping --thinned_snplist Thinned snp list for large clumps Internal File Arguments --model_file large population model file --clump_prefix prefix for files generated by clump step --eval_prefix prefix for files generated by eval step --optimize_prefix prefix for files generated by optimize step --predict_prefix prefix for files generated by predict step --results RESULTS [RESULTS ...] File Column Names Phenotype Files --pf-covariates Phenotype File Field: covariates --pf-name Phenotype File Field: name Sumstats Files --ssf-alt Sumstats Field: alt allele --ssf-beta Sumstats Field: beta --ssf-maf Sumstats Field: MAF --ssf-p Sumstats field: P-value --ssf-ref Sumstats Field: reference allele --ssf-se Sumstats field: standard error --ssf-snpid Sumstats field: snpID --ssf-ss Sumstats Field: Sample Size --sumstat_prefix path to sumstats file prefixes --sumstats_suffix Sumstats Suffix","title":"All Arguments"},{"location":"detail_args/#available-commands","text":"This page contains all command available in PRSice. Tips When constructing new parameters, we follow the following rule: if the command has effect on any file that is not the target, it will have a prefix of the file name. For example, --base-info applies INFO score filtering on the base file, --ld-info perform INFO score filtering on the LD reference file and --info applies the INFO score filtering on the target file.","title":"Available Commands"},{"location":"detail_args/#input-population-filesarguments","text":"--bfile_prefix path to bfile prefix --id_file sample id file --pheno_file phenotype test data --snp_file snp file --validation_file phenotype validation data --pop_config POP_CONFIG --pop_configs POP_CONFIGS POP_CONFIGS --pop_names POP_NAMES POP_NAMES -p POPNAME Population Name","title":"Input Population Files/Arguments"},{"location":"detail_args/#system-level-togglesarguments","text":"--cores By default bridgePRS is parralelized across (n-1) -o OUTPATH Output path for bridgePRS --platform PLATFORM Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --skipAnalysis Skip Post-Pipeline Analysis --repeatSteps Toggle Repeat Pipeline Steps On --spec SPEC [SPEC ...], --specifications SPEC [SPEC ...]","title":"System Level Toggles/Arguments"},{"location":"detail_args/#parameter-arguments","text":"--fst fst value --max_clump_size Max Size for Clumping --thinned_snplist Thinned snp list for large clumps","title":"Parameter Arguments"},{"location":"detail_args/#internal-file-arguments","text":"--model_file large population model file --clump_prefix prefix for files generated by clump step --eval_prefix prefix for files generated by eval step --optimize_prefix prefix for files generated by optimize step --predict_prefix prefix for files generated by predict step --results RESULTS [RESULTS ...]","title":"Internal File Arguments"},{"location":"detail_args/#file-column-names","text":"","title":"File Column Names"},{"location":"detail_args/#phenotype-files","text":"--pf-covariates Phenotype File Field: covariates --pf-name Phenotype File Field: name","title":"Phenotype Files"},{"location":"detail_args/#sumstats-files","text":"--ssf-alt Sumstats Field: alt allele --ssf-beta Sumstats Field: beta --ssf-maf Sumstats Field: MAF --ssf-p Sumstats field: P-value --ssf-ref Sumstats Field: reference allele --ssf-se Sumstats field: standard error --ssf-snpid Sumstats field: snpID --ssf-ss Sumstats Field: Sample Size --sumstat_prefix path to sumstats file prefixes --sumstats_suffix Sumstats Suffix","title":"Sumstats Files"},{"location":"detail_background/","text":"Background You will need to have basic understanding of Genome Wide Association Studies (GWAS) and polygenic scoring (PRS) to be able to use BridgePRS. If you are unfamiliar with GWAS, you can consider reading this paper . If you have familiarity but need a crash refresher then reading the following section will be helpful. GWAS In a Population Genome wide association studies (GWAS) involve analyzing the genomes of a larger group of individuals. This involves looking screening millions of genetic variants (SNP) for association with a particular trait. For a binary trait (like blue or brown eyes) this involves comparing the frequency of genetic variations in each group to produce an odds-ratio (measure of association) and a p-value to measure the signficance of the realtionship at each SNP. For continuous measures (like height) this results in an effect size (measure of continuous association) and p-value that measure the significance of our relationship. GWAS results can be summarized in a sumstats file which looks like this: SNP BP REF ALT BETA PV NOTES rs3094315 A G 1.491 0.0029 Positive ( \\(>1\\) ) Trait Association rs3131972 A G 0.817 0.0008 Negative ( \\(<1\\) ) Trait Association rs3131971 T C 1.001 0.5332 Insignificant ( \\(PV>0.05\\) ) Association PRS In A Single Population Creating individual polygenic scores involves combine information across many genetic variants. A score is calculated summing the genetic association values (beta-weights) for each allele in an individual. This means that variants with stronger associations have a larger impact on the overall score. Usually, variant selection and assignment of SNP weights are determined using a very large \"test dataset\" of individual genotypes and phenotypes and then validated on an out of sample dataset of genotypes and phenotypes. The correlation between the out of sample inidividual phenotypes and their predicted values (PRS scores) can be measured ( \\(R^2\\) ) to assess how predictive the PRS model is. The PRS Portability Problem Often when PRS results from a large test population (usually of European ancestry) are validated to an out of sample population of different ancestry the PRS model is not predictive. Unfortunately, there is not enough data in the non-european population to produce a reliabile \"test dataset\" so researchers have to either accept either: An underpowered PRS model made using only the non-european population. A large PRS model based on European test data that doesn't perform well. The BridgePRS Solution BridgePRS solves this problem by first running producing three different PRS-models. PRS ran using only the primary (Non-European) dataset PRS ran using SNP-weights calculated from the European Model PRS ran using a prior effect-size distribution from the European Model Then BridgePRS combines these results to produce a weighted PRS solution.","title":"Background"},{"location":"detail_background/#background","text":"You will need to have basic understanding of Genome Wide Association Studies (GWAS) and polygenic scoring (PRS) to be able to use BridgePRS. If you are unfamiliar with GWAS, you can consider reading this paper . If you have familiarity but need a crash refresher then reading the following section will be helpful.","title":"Background"},{"location":"detail_background/#gwas-in-a-population","text":"Genome wide association studies (GWAS) involve analyzing the genomes of a larger group of individuals. This involves looking screening millions of genetic variants (SNP) for association with a particular trait. For a binary trait (like blue or brown eyes) this involves comparing the frequency of genetic variations in each group to produce an odds-ratio (measure of association) and a p-value to measure the signficance of the realtionship at each SNP. For continuous measures (like height) this results in an effect size (measure of continuous association) and p-value that measure the significance of our relationship. GWAS results can be summarized in a sumstats file which looks like this: SNP BP REF ALT BETA PV NOTES rs3094315 A G 1.491 0.0029 Positive ( \\(>1\\) ) Trait Association rs3131972 A G 0.817 0.0008 Negative ( \\(<1\\) ) Trait Association rs3131971 T C 1.001 0.5332 Insignificant ( \\(PV>0.05\\) ) Association","title":"GWAS In a Population"},{"location":"detail_background/#prs-in-a-single-population","text":"Creating individual polygenic scores involves combine information across many genetic variants. A score is calculated summing the genetic association values (beta-weights) for each allele in an individual. This means that variants with stronger associations have a larger impact on the overall score. Usually, variant selection and assignment of SNP weights are determined using a very large \"test dataset\" of individual genotypes and phenotypes and then validated on an out of sample dataset of genotypes and phenotypes. The correlation between the out of sample inidividual phenotypes and their predicted values (PRS scores) can be measured ( \\(R^2\\) ) to assess how predictive the PRS model is.","title":"PRS In A Single Population"},{"location":"detail_background/#the-prs-portability-problem","text":"Often when PRS results from a large test population (usually of European ancestry) are validated to an out of sample population of different ancestry the PRS model is not predictive. Unfortunately, there is not enough data in the non-european population to produce a reliabile \"test dataset\" so researchers have to either accept either: An underpowered PRS model made using only the non-european population. A large PRS model based on European test data that doesn't perform well.","title":"The PRS Portability Problem"},{"location":"detail_background/#the-bridgeprs-solution","text":"BridgePRS solves this problem by first running producing three different PRS-models. PRS ran using only the primary (Non-European) dataset PRS ran using SNP-weights calculated from the European Model PRS ran using a prior effect-size distribution from the European Model Then BridgePRS combines these results to produce a weighted PRS solution.","title":"The BridgePRS Solution"},{"location":"detail_commands/","text":"Subprograms BridgePRS consists of five related multi-function subprograms: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS analyze combine Subprogram Input Subcommands Output prs-single Primary Pop Data clump,eval,test,predict prs-result build-model Model Pop Data clump,eval,test,prior model-params prs-port Primary Pop + Model Result port,predict prs-result prs-prior Primary Pop + Model Result inform,test,predict prs-result analyze PRS Result Files combine,plot weighted prs-result These programs can be called consecutively using the easyrun master-program which will create the following directory structure: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS result combine","title":"Subprograms"},{"location":"detail_commands/#subprograms","text":"BridgePRS consists of five related multi-function subprograms: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS analyze combine Subprogram Input Subcommands Output prs-single Primary Pop Data clump,eval,test,predict prs-result build-model Model Pop Data clump,eval,test,prior model-params prs-port Primary Pop + Model Result port,predict prs-result prs-prior Primary Pop + Model Result inform,test,predict prs-result analyze PRS Result Files combine,plot weighted prs-result These programs can be called consecutively using the easyrun master-program which will create the following directory structure:","title":"Subprograms"},{"location":"detail_commands/#1-bridgeprs-prs-single","text":"","title":"1) BridgePRS prs-single"},{"location":"detail_commands/#2-bridgeprs-build-model","text":"","title":"2) BridgePRS build-model"},{"location":"detail_commands/#3-bridgeprs-prs-port","text":"","title":"3) BridgePRS prs-port"},{"location":"detail_commands/#4-bridgeprs-prs-prior","text":"","title":"4) BridgePRS prs-prior"},{"location":"detail_commands/#5-bridgeprs-result-combine","text":"","title":"5) BridgePRS result combine"},{"location":"detail_input/","text":"Input Data For each population used BridgePRS requires the following input file(s) to be supplied on the command line or in a population configuration file. Name Files Command Line flag Description Required Sumstats Data 1 per chromosome --sumstats_prefix GWAS data Yes Plink Data 3 --bfile_prefix Plink data Yes Phenotype Files 1-2 --pheno_files Test/Validation Phenotype Files Yes Snp List 1 --snp_file List of snp ids No Sample List 1 --id_file List of sample ids No Pop Config File(s) 0-1 --pop_config File pointing to the above inputs No The column headers correspond to the following: 1) Sumstats Data --sumstats_prefix GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix). Column headers can be provided using the following flags: --ssf-p , --ssf-snpid , --ssf-se , --ssf-ss , --ssf-beta , --ssf-ref , --ssf-alt , --ssf-maf . For example, with the following input format: #CHROM POS ID A1 AX A1_FREQ TEST OBS_CT BETA SE T_STAT P ERRCODE 1 754105 rs12184325 T C 0.0257573 ADD 4853 0.820864 0.413692 1.98424 0.0472871 . 1 840753 rs4970382 C T 0.483495 ADD 4847 0.0011142 0.128347 0.00868116 0.993074 . 1 958905 rs2710890 G A 0.424387 ADD 4814 0.108094 0.132225 0.817497 0.413687 . Single.add_argument('--pf-name', dest='pf-name', action='store',type=str,metavar='', default=None, help='Phenotype File Field: name') Single.add_argument('--pf-covariates', dest='pf-covariates', action='store',type=str,metavar='', default=None, help='Phenotype File Field: covariates') 2) Plink Data --bfile_prefix BridgePRS requires a target dataset in PLINK binary format consisting of three files: .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information. Currently only SNP major PLINK format are supported (default output of the latest PLINK program). The .bed and .bim file must have the same prefix. If the .fam file follow a different prefix from the .bed and bim file, it can be specified using --target <bim bed prefix>,<fam file> Warning The fam file MUST contains the correct number of samples or BridgePRS will crash 3) Phenotype Files --pheno_files External phenotype file can be provided to BridgePRS using the --pheno_files parameter. This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, or when --ignore-fid is set, the first column should be the IID. The rest of the columns can be the phenotype(s). To specify a trait within the phenotype file, the column name for the trait can be specified using --pheno-col , providing that the phenotype file contains a header. Multiple column name can be provided via a comma separated list: e.g. --pheno-col A,B,C,D . Trait(s) not found within the phenotype file will be automatically skipped. Important The column name(s) should not contain space nor comma 4) SNP List --snp_file When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping. 5) Sample List --id_file When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping. 6) Population Config File This information can be supplied in a configuration file.","title":"Input Data"},{"location":"detail_input/#input-data","text":"For each population used BridgePRS requires the following input file(s) to be supplied on the command line or in a population configuration file. Name Files Command Line flag Description Required Sumstats Data 1 per chromosome --sumstats_prefix GWAS data Yes Plink Data 3 --bfile_prefix Plink data Yes Phenotype Files 1-2 --pheno_files Test/Validation Phenotype Files Yes Snp List 1 --snp_file List of snp ids No Sample List 1 --id_file List of sample ids No Pop Config File(s) 0-1 --pop_config File pointing to the above inputs No The column headers correspond to the following:","title":"Input Data"},{"location":"detail_input/#1-sumstats-data-sumstats_prefix","text":"GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix). Column headers can be provided using the following flags: --ssf-p , --ssf-snpid , --ssf-se , --ssf-ss , --ssf-beta , --ssf-ref , --ssf-alt , --ssf-maf . For example, with the following input format: #CHROM POS ID A1 AX A1_FREQ TEST OBS_CT BETA SE T_STAT P ERRCODE 1 754105 rs12184325 T C 0.0257573 ADD 4853 0.820864 0.413692 1.98424 0.0472871 . 1 840753 rs4970382 C T 0.483495 ADD 4847 0.0011142 0.128347 0.00868116 0.993074 . 1 958905 rs2710890 G A 0.424387 ADD 4814 0.108094 0.132225 0.817497 0.413687 . Single.add_argument('--pf-name', dest='pf-name', action='store',type=str,metavar='', default=None, help='Phenotype File Field: name') Single.add_argument('--pf-covariates', dest='pf-covariates', action='store',type=str,metavar='', default=None, help='Phenotype File Field: covariates')","title":"1) Sumstats Data   --sumstats_prefix"},{"location":"detail_input/#2-plink-data-bfile_prefix","text":"BridgePRS requires a target dataset in PLINK binary format consisting of three files: .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information. Currently only SNP major PLINK format are supported (default output of the latest PLINK program). The .bed and .bim file must have the same prefix. If the .fam file follow a different prefix from the .bed and bim file, it can be specified using --target <bim bed prefix>,<fam file> Warning The fam file MUST contains the correct number of samples or BridgePRS will crash","title":"2) Plink Data  --bfile_prefix"},{"location":"detail_input/#3-phenotype-files-pheno_files","text":"External phenotype file can be provided to BridgePRS using the --pheno_files parameter. This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, or when --ignore-fid is set, the first column should be the IID. The rest of the columns can be the phenotype(s). To specify a trait within the phenotype file, the column name for the trait can be specified using --pheno-col , providing that the phenotype file contains a header. Multiple column name can be provided via a comma separated list: e.g. --pheno-col A,B,C,D . Trait(s) not found within the phenotype file will be automatically skipped. Important The column name(s) should not contain space nor comma","title":"3) Phenotype Files  --pheno_files"},{"location":"detail_input/#4-snp-list-snp_file","text":"When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping.","title":"4) SNP List --snp_file"},{"location":"detail_input/#5-sample-list-id_file","text":"When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping.","title":"5) Sample List --id_file"},{"location":"detail_input/#6-population-config-file","text":"This information can be supplied in a configuration file.","title":"6) Population Config File"},{"location":"detail_output/","text":"Output Data For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat yo Summary Result .snp_weights.dat Snp weights The column headers correspond to the following: 1) SNP Weights GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix). If your base data follows other formats, then the column headers can be provided using the --chr , --A1 , --A2 , --stat , --snp , --bp , --pvalue options Important BridgePRS requires the base file to contain information of the effective allele ( --A1 ), effect size estimates ( --stat ), p-value for association ( --pvalue ), and the SNP ID ( --snp ). If the input file does not contain a column header, the column can be specified using their index (start counting from 0) with the --index flag. For example, with the following input format: SNP CHR BP A1 A2 OR SE P rs3094315 1 752566 A G 0.9912 0.0229 0.7009 rs3131972 1 752721 A G 1.007 0.0228 0.769 rs3131971 1 752894 T C 1.003 0.0232 0.8962 the parameters can be --snp SNP --chr CHR --bp BP --A1 A1 --A2 A2 --stat OR or Strand flips are automatically detected and accounted for. 2) Prediction Files --bfile BridgePRS requires a target dataset in PLINK binary format consisting of three files: .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information. Currently only SNP major PLINK format are supported (default output of the latest PLINK program). The .bed and .bim file must have the same prefix. If the .fam file follow a different prefix from the .bed and bim file, it can be specified using --target <bim bed prefix>,<fam file> Warning The fam file MUST contains the correct number of samples or BridgePRS will crash","title":"Output Data"},{"location":"detail_output/#output-data","text":"For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat yo Summary Result .snp_weights.dat Snp weights The column headers correspond to the following:","title":"Output Data"},{"location":"detail_output/#1-snp-weights","text":"GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix). If your base data follows other formats, then the column headers can be provided using the --chr , --A1 , --A2 , --stat , --snp , --bp , --pvalue options Important BridgePRS requires the base file to contain information of the effective allele ( --A1 ), effect size estimates ( --stat ), p-value for association ( --pvalue ), and the SNP ID ( --snp ). If the input file does not contain a column header, the column can be specified using their index (start counting from 0) with the --index flag. For example, with the following input format: SNP CHR BP A1 A2 OR SE P rs3094315 1 752566 A G 0.9912 0.0229 0.7009 rs3131972 1 752721 A G 1.007 0.0228 0.769 rs3131971 1 752894 T C 1.003 0.0232 0.8962 the parameters can be --snp SNP --chr CHR --bp BP --A1 A1 --A2 A2 --stat OR or Strand flips are automatically detected and accounted for.","title":"1) SNP Weights"},{"location":"detail_output/#2-prediction-files-bfile","text":"BridgePRS requires a target dataset in PLINK binary format consisting of three files: .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information. Currently only SNP major PLINK format are supported (default output of the latest PLINK program). The .bed and .bim file must have the same prefix. If the .fam file follow a different prefix from the .bed and bim file, it can be specified using --target <bim bed prefix>,<fam file> Warning The fam file MUST contains the correct number of samples or BridgePRS will crash","title":"2) Prediction Files  --bfile"},{"location":"detail_requirements/","text":"Requirements Assuming that you have downloaded the BridgePRS package and make the bridgePRS file executable, as described in our quickstart tutorial , we begin by describing the BridgePRS installer. BridgePRS Installer Checking System Requirements BridgePRS depends on R, plink, and python. In the following section will will describe these requirements in detail and how they can be installed. Alternatively, you can type: ./bridgePRS check requirements and bridgePRS will check your system and prompt you to install missing software. R BridgePRS requires that R ( version 3.6.3+ ) be installed. BridgePRS requires the following libraries: BEDMatrix, R.utils, boot, data.table, doMC, glmnet, MASS, optparse, and parallel Plink BridgePRS requires plink Python BridgePRS requires python.","title":"Requirements"},{"location":"detail_requirements/#requirements","text":"Assuming that you have downloaded the BridgePRS package and make the bridgePRS file executable, as described in our quickstart tutorial , we begin by describing the BridgePRS installer.","title":"Requirements"},{"location":"detail_requirements/#bridgeprs-installer","text":"Checking System Requirements BridgePRS depends on R, plink, and python. In the following section will will describe these requirements in detail and how they can be installed. Alternatively, you can type: ./bridgePRS check requirements and bridgePRS will check your system and prompt you to install missing software.","title":"BridgePRS Installer"},{"location":"detail_requirements/#r","text":"BridgePRS requires that R ( version 3.6.3+ ) be installed. BridgePRS requires the following libraries: BEDMatrix, R.utils, boot, data.table, doMC, glmnet, MASS, optparse, and parallel","title":"R"},{"location":"detail_requirements/#plink","text":"BridgePRS requires plink","title":"Plink"},{"location":"detail_requirements/#python","text":"BridgePRS requires python.","title":"Python"},{"location":"detail_shell/","text":"Using BridgePRS without Python Explain this.","title":"Using Bash"},{"location":"detail_shell/#using-bridgeprs-without-python","text":"Explain this.","title":"Using BridgePRS without Python"},{"location":"misc_faq/","text":"Frequently Asked Questions We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_faq/#frequently-asked-questions","text":"We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_log/","text":"Update Log 2023-08-05 v0.1.7 Identified and fixed a bug for binary traits.","title":"Update Log"},{"location":"misc_log/#update-log","text":"","title":"Update Log"},{"location":"misc_log/#2023-08-05-v017","text":"Identified and fixed a bug for binary traits.","title":"2023-08-05 v0.1.7"},{"location":"quikstart_prep/","text":"Before Running 1) Preparation After Downloading and unzipping BridgePRS in a suitable directory (referred to as $BridgeDir ) you will observe the following file structure: $ ls bridgePRS data / src / LICENSE README.md Using the terminal, type the following command from within the directory: chmod +x bridgePRS to make the bridgePRS file executable 2) Requirements Next, confirm that the required libraries and binaries are installed and available by following the detailed instructions in Requirements. Alternatively, you can type: ./bridgePRS check requirements to bridgePRS to check your system and prompt you to install missing requires. 3) Toy Data In this tutorial we use configuration files that tell the program were population specific data is located. For more information on making configuration files, see Input Data . $ ls ${Bridgedir}/data . ... afr_bin.config afr_cont.config eur_bin.config eur_cont.config In this tutorial the primary (smaller sample size) population is of \"AFR\" ancestry and the model (larger sample size) population is of \"EUR\" ancestry: Primary Pop Config Files: (afr_bin.config, afr_cont.config) Model Pop Config Files: (eur_bin.config, eur_cont.config) 4) Demo: Continuous Trait Easyrun Command Assuming, the requirements have been validated in the previous step , BridgePRS can be run using toy-data with the following command: bridgePRS easyrun go -o out1 --pop_config ../../tdata/afr_config.cont.txt ../../tdata/eur_config.cont.txt -p AFR EUR --verbose This command will sequentially run the five steps described in our detailed guide : prs-single: Run PRS using the primary population only (AFR). build-model: Estimate SNP weights & prior params from model pop (EUR). prs-port: Run target-PRS using the model snp weights. prs-prior: Run target-PRS using model prior distributions. analyze combine Combine results to produce a weighted target PRS result. The final result can be summarized in the figure created in out/data/res.png 5) Demo: Binary Trait In our next example we will use the following population configuration files: data/afr_bin.config data/eur_bin.config Easyrun Command A similar easyrun command can be run on the binary trait data: bridgePRS easyrun go -o out --pop_configs data/afr.bin.config data/eur.bin.config --pop_names AFR EUR --specifications data/options.config --verbose Binary Result The final result can be summarized in the figure created in out/data/res.png Directory Result: The directory structure created by this command is shown below:","title":"Running BridgePRS"},{"location":"quikstart_prep/#before-running","text":"","title":"Before Running"},{"location":"quikstart_prep/#1-preparation","text":"After Downloading and unzipping BridgePRS in a suitable directory (referred to as $BridgeDir ) you will observe the following file structure: $ ls bridgePRS data / src / LICENSE README.md Using the terminal, type the following command from within the directory: chmod +x bridgePRS to make the bridgePRS file executable","title":"1) Preparation"},{"location":"quikstart_prep/#2-requirements","text":"Next, confirm that the required libraries and binaries are installed and available by following the detailed instructions in Requirements. Alternatively, you can type: ./bridgePRS check requirements to bridgePRS to check your system and prompt you to install missing requires.","title":"2) Requirements"},{"location":"quikstart_prep/#3-toy-data","text":"In this tutorial we use configuration files that tell the program were population specific data is located. For more information on making configuration files, see Input Data . $ ls ${Bridgedir}/data . ... afr_bin.config afr_cont.config eur_bin.config eur_cont.config In this tutorial the primary (smaller sample size) population is of \"AFR\" ancestry and the model (larger sample size) population is of \"EUR\" ancestry: Primary Pop Config Files: (afr_bin.config, afr_cont.config) Model Pop Config Files: (eur_bin.config, eur_cont.config)","title":"3) Toy Data"},{"location":"quikstart_prep/#4-demo-continuous-trait","text":"Easyrun Command Assuming, the requirements have been validated in the previous step , BridgePRS can be run using toy-data with the following command: bridgePRS easyrun go -o out1 --pop_config ../../tdata/afr_config.cont.txt ../../tdata/eur_config.cont.txt -p AFR EUR --verbose This command will sequentially run the five steps described in our detailed guide : prs-single: Run PRS using the primary population only (AFR). build-model: Estimate SNP weights & prior params from model pop (EUR). prs-port: Run target-PRS using the model snp weights. prs-prior: Run target-PRS using model prior distributions. analyze combine Combine results to produce a weighted target PRS result. The final result can be summarized in the figure created in out/data/res.png","title":"4) Demo: Continuous Trait"},{"location":"quikstart_prep/#5-demo-binary-trait","text":"In our next example we will use the following population configuration files: data/afr_bin.config data/eur_bin.config Easyrun Command A similar easyrun command can be run on the binary trait data: bridgePRS easyrun go -o out --pop_configs data/afr.bin.config data/eur.bin.config --pop_names AFR EUR --specifications data/options.config --verbose","title":"5) Demo:  Binary Trait"},{"location":"quikstart_prep/#binary-result","text":"The final result can be summarized in the figure created in out/data/res.png","title":"Binary Result"},{"location":"quikstart_prep/#directory-result","text":"The directory structure created by this command is shown below:","title":"Directory Result:"}]}