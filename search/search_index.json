{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BridgePRS is a trans-ancestry software that improves PRS in diverse populations. Package Downloads Operating System Link Linux 64-bit v2.3.3 Mac 64-bit v2.3.3 Windows Not available Latest Update 2023-09-15 (v0.1.7) We have added sample thousand genomes data. update log can be found here Quick Start To get started right away using supplied toy data and sample thousand genomes data, please use our Quick Start Tutorial. Requirements BridgePRS depends on R libraries and python3. For more information refer to Requirements. Detailed Guide Our detailed documentation is included in our complete Guide. Citation Please cite our BridgePRS manuscript : Hoggart C, Choi SW, Garc\u00eda-Gonz\u00e1lez J, Souaiaia T, Preuss M, O'Reilly P. BridgePRS : A powerful trans-ancestry Polygenic Risk Score method. bioRxiv [Preprint]. 2023 Feb 21:2023.02.17.528938. doi: 10.1101/2023.02.17.528938. PMID: 36865148; PMCID: PMC9979992. Support This wiki should contain all the basic instruction for the use of BridgePRS. If you have problems, please feel free to submit an issue here or visit our google group .","title":"Home"},{"location":"#package-downloads","text":"Operating System Link Linux 64-bit v2.3.3 Mac 64-bit v2.3.3 Windows Not available Latest Update","title":"Package Downloads"},{"location":"#2023-09-15-v017","text":"We have added sample thousand genomes data. update log can be found here","title":"2023-09-15 (v0.1.7)"},{"location":"#quick-start","text":"To get started right away using supplied toy data and sample thousand genomes data, please use our Quick Start Tutorial.","title":"Quick Start"},{"location":"#requirements","text":"BridgePRS depends on R libraries and python3. For more information refer to Requirements.","title":"Requirements"},{"location":"#detailed-guide","text":"Our detailed documentation is included in our complete Guide. Citation Please cite our BridgePRS manuscript : Hoggart C, Choi SW, Garc\u00eda-Gonz\u00e1lez J, Souaiaia T, Preuss M, O'Reilly P. BridgePRS : A powerful trans-ancestry Polygenic Risk Score method. bioRxiv [Preprint]. 2023 Feb 21:2023.02.17.528938. doi: 10.1101/2023.02.17.528938. PMID: 36865148; PMCID: PMC9979992.","title":"Detailed Guide"},{"location":"#support","text":"This wiki should contain all the basic instruction for the use of BridgePRS. If you have problems, please feel free to submit an issue here or visit our google group .","title":"Support"},{"location":"about/","text":"BridgePRS is a trans-ancestry PRS software which improves polygenic risk score analysis in diverse populations. Calculating PRS using Ridge Regression Porting a PRS model from one population to another Using European data as a prior to improve PRS in diverse populations Results plotted in several formats Citation Please cite our publication in Nature Genetics: BridgePRS Authors For more details on the authors, see: Dr Clive Hoggart Tade Dr Paul O'Reilly Acknowledgement BridgePRS is a software package written in R (main) and Python (wrapper, plotting). The code relies on PLINK by Christopher Chang .","title":"About"},{"location":"about/#authors","text":"For more details on the authors, see: Dr Clive Hoggart Tade Dr Paul O'Reilly","title":"Authors"},{"location":"about/#acknowledgement","text":"BridgePRS is a software package written in R (main) and Python (wrapper, plotting). The code relies on PLINK by Christopher Chang .","title":"Acknowledgement"},{"location":"detail_args/","text":"Available Commands This page contains all command available in PRSice. Tips When constructing new parameters, we follow the following rule: if the command has effect on any file that is not the target, it will have a prefix of the file name. For example, --base-info applies INFO score filtering on the base file, --ld-info perform INFO score filtering on the LD reference file and --info applies the INFO score filtering on the target file. Input Population Files/Arguments --bfile_prefix path to bfile prefix --id_file sample id file --pheno_file phenotype test data --snp_file snp file --validation_file phenotype validation data --pop_config POP_CONFIG --pop_configs POP_CONFIGS POP_CONFIGS --pop_names POP_NAMES POP_NAMES -p POPNAME Population Name System Level Toggles/Arguments --cores By default bridgePRS is parralelized across (n-1) -o OUTPATH Output path for bridgePRS --platform PLATFORM Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --skipAnalysis Skip Post-Pipeline Analysis --repeatSteps Toggle Repeat Pipeline Steps On --spec SPEC [SPEC ...], --specifications SPEC [SPEC ...] Parameter Arguments --fst fst value --max_clump_size Max Size for Clumping --thinned_snplist Thinned snp list for large clumps Internal File Arguments --model_file large population model file --clump_prefix prefix for files generated by clump step --eval_prefix prefix for files generated by eval step --optimize_prefix prefix for files generated by optimize step --predict_prefix prefix for files generated by predict step --results RESULTS [RESULTS ...] File Column Names Phenotype Files --pf-covariates Phenotype File Field: covariates --pf-name Phenotype File Field: name Sumstats Files --ssf-alt Sumstats Field: alt allele --ssf-beta Sumstats Field: beta --ssf-maf Sumstats Field: MAF --ssf-p Sumstats field: P-value --ssf-ref Sumstats Field: reference allele --ssf-se Sumstats field: standard error --ssf-snpid Sumstats field: snpID --ssf-ss Sumstats Field: Sample Size --sumstat_prefix path to sumstats file prefixes --sumstats_suffix Sumstats Suffix","title":"All Arguments"},{"location":"detail_args/#available-commands","text":"This page contains all command available in PRSice. Tips When constructing new parameters, we follow the following rule: if the command has effect on any file that is not the target, it will have a prefix of the file name. For example, --base-info applies INFO score filtering on the base file, --ld-info perform INFO score filtering on the LD reference file and --info applies the INFO score filtering on the target file.","title":"Available Commands"},{"location":"detail_args/#input-population-filesarguments","text":"--bfile_prefix path to bfile prefix --id_file sample id file --pheno_file phenotype test data --snp_file snp file --validation_file phenotype validation data --pop_config POP_CONFIG --pop_configs POP_CONFIGS POP_CONFIGS --pop_names POP_NAMES POP_NAMES -p POPNAME Population Name","title":"Input Population Files/Arguments"},{"location":"detail_args/#system-level-togglesarguments","text":"--cores By default bridgePRS is parralelized across (n-1) -o OUTPATH Output path for bridgePRS --platform PLATFORM Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --skipAnalysis Skip Post-Pipeline Analysis --repeatSteps Toggle Repeat Pipeline Steps On --spec SPEC [SPEC ...], --specifications SPEC [SPEC ...]","title":"System Level Toggles/Arguments"},{"location":"detail_args/#parameter-arguments","text":"--fst fst value --max_clump_size Max Size for Clumping --thinned_snplist Thinned snp list for large clumps","title":"Parameter Arguments"},{"location":"detail_args/#internal-file-arguments","text":"--model_file large population model file --clump_prefix prefix for files generated by clump step --eval_prefix prefix for files generated by eval step --optimize_prefix prefix for files generated by optimize step --predict_prefix prefix for files generated by predict step --results RESULTS [RESULTS ...]","title":"Internal File Arguments"},{"location":"detail_args/#file-column-names","text":"","title":"File Column Names"},{"location":"detail_args/#phenotype-files","text":"--pf-covariates Phenotype File Field: covariates --pf-name Phenotype File Field: name","title":"Phenotype Files"},{"location":"detail_args/#sumstats-files","text":"--ssf-alt Sumstats Field: alt allele --ssf-beta Sumstats Field: beta --ssf-maf Sumstats Field: MAF --ssf-p Sumstats field: P-value --ssf-ref Sumstats Field: reference allele --ssf-se Sumstats field: standard error --ssf-snpid Sumstats field: snpID --ssf-ss Sumstats Field: Sample Size --sumstat_prefix path to sumstats file prefixes --sumstats_suffix Sumstats Suffix","title":"Sumstats Files"},{"location":"detail_background/","text":"Background You will need to have basic understanding of Genome Wide Association Studies (GWAS) and polygenic scoring (PRS) to be able to use BridgePRS. If you are unfamiliar with GWAS, you can consider reading this paper . If you have familiarity but need a crash refresher then reading the following section will be helpful. GWAS In a Population Genome wide association studies (GWAS) involve analyzing the genomes of a larger group of individuals. This involves looking screening millions of genetic variants (SNP) for association with a particular trait. For a binary trait (like blue or brown eyes) this involves comparing the frequency of genetic variations in each group to produce an odds-ratio (measure of association) and a p-value to measure the signficance of the realtionship at each SNP. For continuous measures (like height) this results in an effect size (measure of continuous association) and p-value that measure the significance of our relationship. GWAS results can be summarized in a sumstats file which looks like this: SNP BP REF ALT BETA PV NOTES rs3094315 10523 A G 1.491 0.0029 Positive ( \\(>1\\) ) Trait Association rs3131972 91345 A G 0.817 0.0008 Negative ( \\(<1\\) ) Trait Association rs3131971 23040 T C 1.001 0.5332 Insignificant ( \\(PV>0.05\\) ) Association PRS In A Single Population Creating individual polygenic scores involves combine information across many genetic variants. A score is calculated summing the genetic association values (beta-weights) for each allele in an individual. This means that variants with stronger associations have a larger impact on the overall score. Usually, variant selection and assignment of SNP weights are determined using a very large \"test dataset\" of individual genotypes and phenotypes and then validated on an out of sample dataset of genotypes and phenotypes. The correlation between the out of sample inidividual phenotypes and their predicted values (PRS scores) can be measured ( \\(R^2\\) ) to assess how predictive the PRS model is. The PRS Portability Problem Often when PRS results from a large test population (usually of European ancestry) are validated to an out of sample population of different ancestry the PRS model is not predictive. Unfortunately, there is not enough data in the non-european population to produce a reliabile \"test dataset\" so researchers have to either accept either: An underpowered PRS model made using only the non-european population. A large PRS model based on European test data that doesn't perform well. The BridgePRS Solution BridgePRS solves this problem by first running producing three different PRS-models. PRS ran using only the primary (Non-European) dataset PRS ran using SNP-weights calculated from the European Model PRS ran using a prior effect-size distribution from the European Model Then BridgePRS combines these results to produce a weighted PRS solution.","title":"Background"},{"location":"detail_background/#background","text":"You will need to have basic understanding of Genome Wide Association Studies (GWAS) and polygenic scoring (PRS) to be able to use BridgePRS. If you are unfamiliar with GWAS, you can consider reading this paper . If you have familiarity but need a crash refresher then reading the following section will be helpful.","title":"Background"},{"location":"detail_background/#gwas-in-a-population","text":"Genome wide association studies (GWAS) involve analyzing the genomes of a larger group of individuals. This involves looking screening millions of genetic variants (SNP) for association with a particular trait. For a binary trait (like blue or brown eyes) this involves comparing the frequency of genetic variations in each group to produce an odds-ratio (measure of association) and a p-value to measure the signficance of the realtionship at each SNP. For continuous measures (like height) this results in an effect size (measure of continuous association) and p-value that measure the significance of our relationship. GWAS results can be summarized in a sumstats file which looks like this: SNP BP REF ALT BETA PV NOTES rs3094315 10523 A G 1.491 0.0029 Positive ( \\(>1\\) ) Trait Association rs3131972 91345 A G 0.817 0.0008 Negative ( \\(<1\\) ) Trait Association rs3131971 23040 T C 1.001 0.5332 Insignificant ( \\(PV>0.05\\) ) Association","title":"GWAS In a Population"},{"location":"detail_background/#prs-in-a-single-population","text":"Creating individual polygenic scores involves combine information across many genetic variants. A score is calculated summing the genetic association values (beta-weights) for each allele in an individual. This means that variants with stronger associations have a larger impact on the overall score. Usually, variant selection and assignment of SNP weights are determined using a very large \"test dataset\" of individual genotypes and phenotypes and then validated on an out of sample dataset of genotypes and phenotypes. The correlation between the out of sample inidividual phenotypes and their predicted values (PRS scores) can be measured ( \\(R^2\\) ) to assess how predictive the PRS model is.","title":"PRS In A Single Population"},{"location":"detail_background/#the-prs-portability-problem","text":"Often when PRS results from a large test population (usually of European ancestry) are validated to an out of sample population of different ancestry the PRS model is not predictive. Unfortunately, there is not enough data in the non-european population to produce a reliabile \"test dataset\" so researchers have to either accept either: An underpowered PRS model made using only the non-european population. A large PRS model based on European test data that doesn't perform well.","title":"The PRS Portability Problem"},{"location":"detail_background/#the-bridgeprs-solution","text":"BridgePRS solves this problem by first running producing three different PRS-models. PRS ran using only the primary (Non-European) dataset PRS ran using SNP-weights calculated from the European Model PRS ran using a prior effect-size distribution from the European Model Then BridgePRS combines these results to produce a weighted PRS solution.","title":"The BridgePRS Solution"},{"location":"detail_commands/","text":"Subprograms BridgePRS consists of five related multi-function subprograms: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS analyze combine Subprogram Input Subcommands Output prs-single Primary Pop Data clump,eval,test,predict prs-result build-model Model Pop Data clump,eval,test,prior model-params prs-port Primary Pop + Model Result port,predict prs-result prs-prior Primary Pop + Model Result inform,test,predict prs-result analyze PRS Result Files combine,plot weighted prs-result These programs can be called consecutively using the easyrun master-program which will create the following directory structure: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS result combine","title":"Subprograms"},{"location":"detail_commands/#subprograms","text":"BridgePRS consists of five related multi-function subprograms: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS analyze combine Subprogram Input Subcommands Output prs-single Primary Pop Data clump,eval,test,predict prs-result build-model Model Pop Data clump,eval,test,prior model-params prs-port Primary Pop + Model Result port,predict prs-result prs-prior Primary Pop + Model Result inform,test,predict prs-result analyze PRS Result Files combine,plot weighted prs-result These programs can be called consecutively using the easyrun master-program which will create the following directory structure:","title":"Subprograms"},{"location":"detail_commands/#1-bridgeprs-prs-single","text":"","title":"1) BridgePRS prs-single"},{"location":"detail_commands/#2-bridgeprs-build-model","text":"","title":"2) BridgePRS build-model"},{"location":"detail_commands/#3-bridgeprs-prs-port","text":"","title":"3) BridgePRS prs-port"},{"location":"detail_commands/#4-bridgeprs-prs-prior","text":"","title":"4) BridgePRS prs-prior"},{"location":"detail_commands/#5-bridgeprs-result-combine","text":"","title":"5) BridgePRS result combine"},{"location":"detail_input/","text":"Input Data Background Data: Thousand Genomes BridgePRS estimates SNP-specific LD in the clumping step from multi-population target data in PLINK binary format. BridgePRS includes sample thousand genome data ( BRIDGEDIR/data/kg_sample ) for super-groups (AFR and EUR). A full dataset and corresponding population-id lists ( AFR.ids.txt , EUR.ids.txt , EAS.ids.txt , SAS.ids.txt ) can be downloaded here and unzipped into BRIDGEDIR/data/kg_ref to enable full use of BridgePRS for the above populations (AFR, EUR, EAS, SAS). User supplied background data can be used by pointing to a folder with the flag --tgPath that containing by-chromosome PLINK binary format (three files per chromosome .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information) and lists of population ids in txt format ( POP.ids.txt ). Trait Data: GWAS Sumstats and Phenotype Data Primary Population For the primary population (where the trait is being estimated) BridgePRS requires that the following data be supplied using command line arguments or a configuration file: Name Files Command Line flag Description Required Sumstats 1 per chr --sumstats_prefix GWAS data Yes Phenotypes 2 --pheno_files Test/Validation Phenotype Files Yes Snp List 0-1 --snp_file List qc of snp ids No Pop Config 0-1 --pop_config File pointing to the above inputs No Creating a Configuration File The following command will validate the input data supplied on the command line ./bridgePRS check data -o out --pop AFR --phenotype y --sumstats_prefix data/pop_africa/sumstats/afr.chr --phenotype_files data/pop_africa/phenotypes/afr_test.dat data/pop_africa/phenotypes/afr_validation.dat And produce a configuration file for an african population that mirrors the supplied configuration file: $ cat data/afr_cont.config . ... POP = AFR SUMSTATS_PREFIX = pop_africa / sumstats / afr.chr PHENOTYPE_FILES = pop_africa / phenotypes / afr_test.dat,pop_africa / phenotypes / afr_validation.dat SNP_FILE = pop_africa / snps.txt PHENOTYPE = y Model Population For the model population (used to produce prior distributions) BridgePRS can incorporate model GWAS and phenotype data if it is available. If it is not available then, the primary population files can be substituted in as shown in the following configuration files: With GWAS Data POP = EUR SUMSTATS_PREFIX = pop_europe / sumstats / eur.chr PHENOTYPE_FILES = pop_europe / phenotypes / eur_test.dat SNP_FILE = pop_europe / snps.txt PHENOTYPE = y Without GWAS Data POP = EUR SUMSTATS_PREFIX = pop_africa / sumstats / afr.chr PHENOTYPE_FILES = pop_africa / phenotypes / afr_test.dat SNP_FILE = pop_africa / snps.txt PHENOTYPE = y File Specifications 1) Sumstats Data GWAS summary statistics can be provided using a prefix to multiple chromosome separated files with the --sumstats_prefix flag or with using a single sumstats file with the --sumstats_file flag. If a prefix is given, then a suffix can be provided as well --sumstats_suffix . GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix) or splitting the file by chromosome if necessary. An example of a sumstats file with default column headers is shown: #CHROM POS ID REF ALT A1 A1_FREQ TEST OBS_CT BETA SE T_STAT P ERRCODE 1 754105 rs12184325 T C G 0.0257573 ADD 4853 0.820864 0.413692 1.98424 0.0472871 . 1 840753 rs4970382 C T G 0.483495 ADD 4847 0.0011142 0.128347 0.00868116 0.993074 . 1 958905 rs2710890 G A G 0.424387 ADD 4814 0.108094 0.132225 0.817497 0.413687 . Column headers can be specified on the command line or in a configuration file using --ssf flags: ( --ssf-chr , --ssf-p , --ssf-snpid , --ssf-se , --ssf-ss , --ssf-beta , --ssf-ref , --ssf-alt , --ssf-maf .) Flag --ssf-chr --ssf-snpid --ssf-ref --ssf-alt --ssf-maf --ssf-ss --ssf-beta --ssf-se --ssf-p Default #CHROM ID REF A1 A1_FREQ OBS_CT BETA SE P 2) Phenotype Files --phenotype_files Phenotype files can be provided to BridgePRS using the --phenotype_files flag. This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, and the rest can be phenotypes/covariates: FID IID y y.binary PC1 PC2 afr1_1 afr2_1 24.4 1 0.53 0.950 afr1_2 afr2_2 4.10 0 0.59 0.450 afr1_3 afr2_3 37.2 1 0.73 -0.13 afr1_4 afr2_4 5.40 0 0.44 -0.55 The phenotype of interest can be specified with the --phenotype flag and the covariates can be given as a comma separated list after the --covariates flag: ``` ./bridgePRS check data -o out --pop AFR --phenotype y --covariates PC1,PC2 --phenotype_files data/pop_africa/phenotypes/afr_test.dat data/pop_africa/phenotypes/afr_validation.dat ``` Warning The column name(s) should not contain space nor comma 3) QC SNP List --snp_file When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping. 4) Thinned SNP List --snp_file When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping.","title":"Input Data"},{"location":"detail_input/#input-data","text":"","title":"Input Data"},{"location":"detail_input/#background-data-thousand-genomes","text":"BridgePRS estimates SNP-specific LD in the clumping step from multi-population target data in PLINK binary format. BridgePRS includes sample thousand genome data ( BRIDGEDIR/data/kg_sample ) for super-groups (AFR and EUR). A full dataset and corresponding population-id lists ( AFR.ids.txt , EUR.ids.txt , EAS.ids.txt , SAS.ids.txt ) can be downloaded here and unzipped into BRIDGEDIR/data/kg_ref to enable full use of BridgePRS for the above populations (AFR, EUR, EAS, SAS). User supplied background data can be used by pointing to a folder with the flag --tgPath that containing by-chromosome PLINK binary format (three files per chromosome .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information) and lists of population ids in txt format ( POP.ids.txt ).","title":"Background Data: Thousand Genomes"},{"location":"detail_input/#trait-data-gwas-sumstats-and-phenotype-data","text":"Primary Population For the primary population (where the trait is being estimated) BridgePRS requires that the following data be supplied using command line arguments or a configuration file: Name Files Command Line flag Description Required Sumstats 1 per chr --sumstats_prefix GWAS data Yes Phenotypes 2 --pheno_files Test/Validation Phenotype Files Yes Snp List 0-1 --snp_file List qc of snp ids No Pop Config 0-1 --pop_config File pointing to the above inputs No Creating a Configuration File The following command will validate the input data supplied on the command line ./bridgePRS check data -o out --pop AFR --phenotype y --sumstats_prefix data/pop_africa/sumstats/afr.chr --phenotype_files data/pop_africa/phenotypes/afr_test.dat data/pop_africa/phenotypes/afr_validation.dat And produce a configuration file for an african population that mirrors the supplied configuration file: $ cat data/afr_cont.config . ... POP = AFR SUMSTATS_PREFIX = pop_africa / sumstats / afr.chr PHENOTYPE_FILES = pop_africa / phenotypes / afr_test.dat,pop_africa / phenotypes / afr_validation.dat SNP_FILE = pop_africa / snps.txt PHENOTYPE = y Model Population For the model population (used to produce prior distributions) BridgePRS can incorporate model GWAS and phenotype data if it is available. If it is not available then, the primary population files can be substituted in as shown in the following configuration files: With GWAS Data POP = EUR SUMSTATS_PREFIX = pop_europe / sumstats / eur.chr PHENOTYPE_FILES = pop_europe / phenotypes / eur_test.dat SNP_FILE = pop_europe / snps.txt PHENOTYPE = y Without GWAS Data POP = EUR SUMSTATS_PREFIX = pop_africa / sumstats / afr.chr PHENOTYPE_FILES = pop_africa / phenotypes / afr_test.dat SNP_FILE = pop_africa / snps.txt PHENOTYPE = y","title":"Trait Data: GWAS Sumstats and Phenotype Data"},{"location":"detail_input/#file-specifications","text":"","title":"File Specifications"},{"location":"detail_input/#1-sumstats-data","text":"GWAS summary statistics can be provided using a prefix to multiple chromosome separated files with the --sumstats_prefix flag or with using a single sumstats file with the --sumstats_file flag. If a prefix is given, then a suffix can be provided as well --sumstats_suffix . GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix) or splitting the file by chromosome if necessary. An example of a sumstats file with default column headers is shown: #CHROM POS ID REF ALT A1 A1_FREQ TEST OBS_CT BETA SE T_STAT P ERRCODE 1 754105 rs12184325 T C G 0.0257573 ADD 4853 0.820864 0.413692 1.98424 0.0472871 . 1 840753 rs4970382 C T G 0.483495 ADD 4847 0.0011142 0.128347 0.00868116 0.993074 . 1 958905 rs2710890 G A G 0.424387 ADD 4814 0.108094 0.132225 0.817497 0.413687 . Column headers can be specified on the command line or in a configuration file using --ssf flags: ( --ssf-chr , --ssf-p , --ssf-snpid , --ssf-se , --ssf-ss , --ssf-beta , --ssf-ref , --ssf-alt , --ssf-maf .) Flag --ssf-chr --ssf-snpid --ssf-ref --ssf-alt --ssf-maf --ssf-ss --ssf-beta --ssf-se --ssf-p Default #CHROM ID REF A1 A1_FREQ OBS_CT BETA SE P","title":"1) Sumstats Data"},{"location":"detail_input/#2-phenotype-files-phenotype_files","text":"Phenotype files can be provided to BridgePRS using the --phenotype_files flag. This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, and the rest can be phenotypes/covariates: FID IID y y.binary PC1 PC2 afr1_1 afr2_1 24.4 1 0.53 0.950 afr1_2 afr2_2 4.10 0 0.59 0.450 afr1_3 afr2_3 37.2 1 0.73 -0.13 afr1_4 afr2_4 5.40 0 0.44 -0.55 The phenotype of interest can be specified with the --phenotype flag and the covariates can be given as a comma separated list after the --covariates flag: ``` ./bridgePRS check data -o out --pop AFR --phenotype y --covariates PC1,PC2 --phenotype_files data/pop_africa/phenotypes/afr_test.dat data/pop_africa/phenotypes/afr_validation.dat ``` Warning The column name(s) should not contain space nor comma","title":"2) Phenotype Files  --phenotype_files"},{"location":"detail_input/#3-qc-snp-list-snp_file","text":"When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping.","title":"3) QC SNP List --snp_file"},{"location":"detail_input/#4-thinned-snp-list-snp_file","text":"When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping.","title":"4) Thinned SNP List --snp_file"},{"location":"detail_output/","text":"Output Data For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat yo Summary Result .snp_weights.dat Snp weights The column headers correspond to the following: 1) SNP Weights GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix). If your base data follows other formats, then the column headers can be provided using the --chr , --A1 , --A2 , --stat , --snp , --bp , --pvalue options Important BridgePRS requires the base file to contain information of the effective allele ( --A1 ), effect size estimates ( --stat ), p-value for association ( --pvalue ), and the SNP ID ( --snp ). If the input file does not contain a column header, the column can be specified using their index (start counting from 0) with the --index flag. For example, with the following input format: SNP CHR BP A1 A2 OR SE P rs3094315 1 752566 A G 0.9912 0.0229 0.7009 rs3131972 1 752721 A G 1.007 0.0228 0.769 rs3131971 1 752894 T C 1.003 0.0232 0.8962 the parameters can be --snp SNP --chr CHR --bp BP --A1 A1 --A2 A2 --stat OR or Strand flips are automatically detected and accounted for. 2) Prediction Files --bfile BridgePRS requires a target dataset in PLINK binary format consisting of three files: .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information. Currently only SNP major PLINK format are supported (default output of the latest PLINK program). The .bed and .bim file must have the same prefix. If the .fam file follow a different prefix from the .bed and bim file, it can be specified using --target <bim bed prefix>,<fam file> Warning The fam file MUST contains the correct number of samples or BridgePRS will crash","title":"Output Data"},{"location":"detail_output/#output-data","text":"For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat yo Summary Result .snp_weights.dat Snp weights The column headers correspond to the following:","title":"Output Data"},{"location":"detail_output/#1-snp-weights","text":"GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix). If your base data follows other formats, then the column headers can be provided using the --chr , --A1 , --A2 , --stat , --snp , --bp , --pvalue options Important BridgePRS requires the base file to contain information of the effective allele ( --A1 ), effect size estimates ( --stat ), p-value for association ( --pvalue ), and the SNP ID ( --snp ). If the input file does not contain a column header, the column can be specified using their index (start counting from 0) with the --index flag. For example, with the following input format: SNP CHR BP A1 A2 OR SE P rs3094315 1 752566 A G 0.9912 0.0229 0.7009 rs3131972 1 752721 A G 1.007 0.0228 0.769 rs3131971 1 752894 T C 1.003 0.0232 0.8962 the parameters can be --snp SNP --chr CHR --bp BP --A1 A1 --A2 A2 --stat OR or Strand flips are automatically detected and accounted for.","title":"1) SNP Weights"},{"location":"detail_output/#2-prediction-files-bfile","text":"BridgePRS requires a target dataset in PLINK binary format consisting of three files: .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information. Currently only SNP major PLINK format are supported (default output of the latest PLINK program). The .bed and .bim file must have the same prefix. If the .fam file follow a different prefix from the .bed and bim file, it can be specified using --target <bim bed prefix>,<fam file> Warning The fam file MUST contains the correct number of samples or BridgePRS will crash","title":"2) Prediction Files  --bfile"},{"location":"detail_requirements/","text":"Requirements BridgePRS depends on R, plink, and a python wrapper. In this section we describe these requirements in detail. BridgePRS Installer The BridgePRS Installer If BridgePRS has been downloaded and made executable (as described in our quickstart tutorial ) then the following command can be used to allow bridgePRS to check system compatibility and prompt you to install missing software: $ ./bridgePRS check requirements BridgePRS Begins... Bridge Command-Line: ../../bridgePRS check requirements Module: check Command: requirements System: cores=7, platform=linux, plinkpath=src/Python/Xtra, rpath=src/Rscripts Options: fst=0.15, outpath=out, tgpath=/home/tade/Current/bridgePRS/repo/BridgePRS/data/sampleKg JOB1: Checking Requirements..................................................... Python Found: /usr/bin/python3 Matplotlib: Found R Found: /usr/bin/R R Version: 3.6.3 R packages: Up To Date Complete R BridgePRS requires that the following R ( version 3.6.3+ ) libraries be installed: BEDMatrix, R.utils, boot, data.table, doMC, glmnet, MASS, optparse, and parallel. Plink BridgePRS requires a version of plink compatible with your machine. ( download ) By default BridgePRS includes a version of plink for Linux and MacOs. Python The BridgePRS wrapper requires python3+ ( download ) and the matplotlib package ( download ) is required for plotting, which is optional. If python3+ is not available, BridgePRS can be ran using shell scripts, as described in the README file.","title":"Requirements"},{"location":"detail_requirements/#requirements","text":"BridgePRS depends on R, plink, and a python wrapper. In this section we describe these requirements in detail.","title":"Requirements"},{"location":"detail_requirements/#bridgeprs-installer","text":"The BridgePRS Installer If BridgePRS has been downloaded and made executable (as described in our quickstart tutorial ) then the following command can be used to allow bridgePRS to check system compatibility and prompt you to install missing software: $ ./bridgePRS check requirements BridgePRS Begins... Bridge Command-Line: ../../bridgePRS check requirements Module: check Command: requirements System: cores=7, platform=linux, plinkpath=src/Python/Xtra, rpath=src/Rscripts Options: fst=0.15, outpath=out, tgpath=/home/tade/Current/bridgePRS/repo/BridgePRS/data/sampleKg JOB1: Checking Requirements..................................................... Python Found: /usr/bin/python3 Matplotlib: Found R Found: /usr/bin/R R Version: 3.6.3 R packages: Up To Date Complete","title":"BridgePRS Installer"},{"location":"detail_requirements/#r","text":"BridgePRS requires that the following R ( version 3.6.3+ ) libraries be installed: BEDMatrix, R.utils, boot, data.table, doMC, glmnet, MASS, optparse, and parallel.","title":"R"},{"location":"detail_requirements/#plink","text":"BridgePRS requires a version of plink compatible with your machine. ( download ) By default BridgePRS includes a version of plink for Linux and MacOs.","title":"Plink"},{"location":"detail_requirements/#python","text":"The BridgePRS wrapper requires python3+ ( download ) and the matplotlib package ( download ) is required for plotting, which is optional. If python3+ is not available, BridgePRS can be ran using shell scripts, as described in the README file.","title":"Python"},{"location":"detail_shell/","text":"Using BridgePRS without Python Explain this.","title":"Using Bash"},{"location":"detail_shell/#using-bridgeprs-without-python","text":"Explain this.","title":"Using BridgePRS without Python"},{"location":"misc_faq/","text":"Frequently Asked Questions We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_faq/#frequently-asked-questions","text":"We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_log/","text":"Update Log 2023-08-15 v0.1.7 Added Sample Thousand Genomes Data. 2023-08-05 v0.1.7 Identified and fixed a bug for binary traits.","title":"Update Log"},{"location":"misc_log/#update-log","text":"","title":"Update Log"},{"location":"misc_log/#2023-08-15-v017","text":"Added Sample Thousand Genomes Data.","title":"2023-08-15 v0.1.7"},{"location":"misc_log/#2023-08-05-v017","text":"Identified and fixed a bug for binary traits.","title":"2023-08-05 v0.1.7"},{"location":"quikstart_prep/","text":"Before Running 1) Preparation After downloading and unzipping BridgePRS into a suitable directory on your machine (referred to as $BridgeDir ) you will observe the following file structure: $ ls bridgePRS data / src / LICENSE README.md Using the terminal, type the following command from within the directory: === $ chmod +x bridgePRS to make the bridgePRS file executable 2) Requirements Next, confirm that the required libraries and binaries are installed and available by following the detailed instructions in Requirements. Alternatively, you can type: $./bridgePRS check requirements BridgePRS Begins... and bridgePRS to check your system and prompt/direct you to install any missing dependencies. 3) Toy Data In this tutorial we use sample configuration files that tell the program were population specific data is located. For more information on configuration files, see Input Data . $ ls data/ . ... afr_bin.config afr_cont.config eur_bin.config eur_cont.config In this tutorial the primary (smaller sample size) population is of \"AFR\" ancestry and the model (larger sample size) population is of \"EUR\" ancestry: Primary Pop Config Files: (afr_bin.config, afr_cont.config) Model Pop Config Files: (eur_bin.config, eur_cont.config) 4) Demo: Continuous Trait Easyrun Command Assuming, the requirements have been validated in the previous step , BridgePRS can be run using toy-data and sample thousand genomes data with the following command: bridgePRS easyrun go -o out1 --pop_config tdata/afr_cont.config tdata/eur_cont.config --tgpath tdata/sampleKg This command will sequentially run the five subprograms described in detail in our here : prs-single: Run PRS using the primary population only (AFR). build-model: Estimate SNP weights & prior params from model pop (EUR). prs-port: Run target-PRS using the model snp weights. prs-prior: Run target-PRS using model prior distributions. analyze combine Combine results to produce a weighted target PRS result. And create a final summary in out1/AFR_summary.png : 5) Demo: Binary Trait In our next example we will use the following population configuration files: data/afr_bin.config data/eur_bin.config Easyrun Command A similar easyrun command can be run on the binary trait data: bridgePRS easyrun go -o out2 --pop_config tdata/afr_bin.config tdata/eur_bin.config --tgpath tdata/sampleKg To create a final summary in out2/AFR_summary.png : Directory Result: The directory structure created by this command is shown below:","title":"Running BridgePRS"},{"location":"quikstart_prep/#before-running","text":"","title":"Before Running"},{"location":"quikstart_prep/#1-preparation","text":"After downloading and unzipping BridgePRS into a suitable directory on your machine (referred to as $BridgeDir ) you will observe the following file structure: $ ls bridgePRS data / src / LICENSE README.md Using the terminal, type the following command from within the directory: === $ chmod +x bridgePRS to make the bridgePRS file executable","title":"1) Preparation"},{"location":"quikstart_prep/#2-requirements","text":"Next, confirm that the required libraries and binaries are installed and available by following the detailed instructions in Requirements. Alternatively, you can type: $./bridgePRS check requirements BridgePRS Begins... and bridgePRS to check your system and prompt/direct you to install any missing dependencies.","title":"2) Requirements"},{"location":"quikstart_prep/#3-toy-data","text":"In this tutorial we use sample configuration files that tell the program were population specific data is located. For more information on configuration files, see Input Data . $ ls data/ . ... afr_bin.config afr_cont.config eur_bin.config eur_cont.config In this tutorial the primary (smaller sample size) population is of \"AFR\" ancestry and the model (larger sample size) population is of \"EUR\" ancestry: Primary Pop Config Files: (afr_bin.config, afr_cont.config) Model Pop Config Files: (eur_bin.config, eur_cont.config)","title":"3) Toy Data"},{"location":"quikstart_prep/#4-demo-continuous-trait","text":"Easyrun Command Assuming, the requirements have been validated in the previous step , BridgePRS can be run using toy-data and sample thousand genomes data with the following command: bridgePRS easyrun go -o out1 --pop_config tdata/afr_cont.config tdata/eur_cont.config --tgpath tdata/sampleKg This command will sequentially run the five subprograms described in detail in our here : prs-single: Run PRS using the primary population only (AFR). build-model: Estimate SNP weights & prior params from model pop (EUR). prs-port: Run target-PRS using the model snp weights. prs-prior: Run target-PRS using model prior distributions. analyze combine Combine results to produce a weighted target PRS result. And create a final summary in out1/AFR_summary.png :","title":"4) Demo: Continuous Trait"},{"location":"quikstart_prep/#5-demo-binary-trait","text":"In our next example we will use the following population configuration files: data/afr_bin.config data/eur_bin.config Easyrun Command A similar easyrun command can be run on the binary trait data: bridgePRS easyrun go -o out2 --pop_config tdata/afr_bin.config tdata/eur_bin.config --tgpath tdata/sampleKg To create a final summary in out2/AFR_summary.png :","title":"5) Demo:  Binary Trait"},{"location":"quikstart_prep/#directory-result","text":"The directory structure created by this command is shown below:","title":"Directory Result:"}]}