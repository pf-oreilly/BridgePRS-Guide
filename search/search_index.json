{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BridgePRS is a trans-ancestry PRS software which improves polygenic risk score analysis in diverse populations. Some features include: Calculating PRS using Ridge Regression Porting a PRS model from one population to another Using European data as a prior to improve PRS in diverse populations Results plotted in several formats (bar plots, high-res plots, quantile plots) Package Downloads Operating System Link Linux 64-bit v2.3.3 Mac 64-bit v2.3.3 Windows Not available Latest Update 2023-08-05 (v0.1.7) Thanks to user Brian, we were able to fix a bug in the Rcode! update log for previous release can be found here Requirements BridgePRS depends on R libraries and python3. For more refer to Requirements Quick Start To get started using toy data, please refer to the Quick Start Tutorial Detailed Guide Detailed documentation can be found here Citation Please cite the BridgePRS manuscript from Bioarchiv Support This wiki should contain all the basic instruction for the use of BridgePRS. If you have problems, please feel free to start an issue here or visit our google group .","title":"Home"},{"location":"#package-downloads","text":"Operating System Link Linux 64-bit v2.3.3 Mac 64-bit v2.3.3 Windows Not available Latest Update","title":"Package Downloads"},{"location":"#2023-08-05-v017","text":"Thanks to user Brian, we were able to fix a bug in the Rcode! update log for previous release can be found here","title":"2023-08-05 (v0.1.7)"},{"location":"#requirements","text":"BridgePRS depends on R libraries and python3. For more refer to Requirements","title":"Requirements"},{"location":"#quick-start","text":"To get started using toy data, please refer to the Quick Start Tutorial","title":"Quick Start"},{"location":"#detailed-guide","text":"Detailed documentation can be found here Citation Please cite the BridgePRS manuscript from Bioarchiv","title":"Detailed Guide"},{"location":"#support","text":"This wiki should contain all the basic instruction for the use of BridgePRS. If you have problems, please feel free to start an issue here or visit our google group .","title":"Support"},{"location":"about/","text":"BridgePRS is a trans-ancestry PRS software which improves polygenic risk score analysis in diverse populations. Citation Please cite the BridgePRS manuscript from Bioarchiv Authors For more details on the authors, see: Dr Paul O'Reilly Dr Clive Hoggart Acknowledgement BridgePRS is a software package written in R (main) and Python (wrapper, plotting). The code relies on PLINK by Christopher Chang . We also utilize the Eigen C++ library, the gzstream library.","title":"About"},{"location":"about/#authors","text":"For more details on the authors, see: Dr Paul O'Reilly Dr Clive Hoggart","title":"Authors"},{"location":"about/#acknowledgement","text":"BridgePRS is a software package written in R (main) and Python (wrapper, plotting). The code relies on PLINK by Christopher Chang . We also utilize the Eigen C++ library, the gzstream library.","title":"Acknowledgement"},{"location":"detail_args/","text":"Available Commands This page contains all command available in PRSice. Tips When constructing new parameters, we follow the following rule: if the command has effect on any file that is not the target, it will have a prefix of the file name. For example, --base-info applies INFO score filtering on the base file, --ld-info perform INFO score filtering on the LD reference file and --info applies the INFO score filtering on the target file. Input Population Files/Arguments --bfile_prefix path to bfile prefix --id_file sample id file --pheno_file phenotype test data --snp_file snp file --validation_file phenotype validation data --pop_config POP_CONFIG --pop_configs POP_CONFIGS POP_CONFIGS --pop_names POP_NAMES POP_NAMES -p POPNAME Population Name System Level Toggles/Arguments --cores By default bridgePRS is parralelized across (n-1) -o OUTPATH Output path for bridgePRS --platform PLATFORM Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --skipAnalysis Skip Post-Pipeline Analysis --repeatSteps Toggle Repeat Pipeline Steps On --spec SPEC [SPEC ...], --specifications SPEC [SPEC ...] Parameter Arguments --fst fst value --max_clump_size Max Size for Clumping --thinned_snplist Thinned snp list for large clumps Internal File Arguments --model_file large population model file --clump_prefix prefix for files generated by clump step --eval_prefix prefix for files generated by eval step --optimize_prefix prefix for files generated by optimize step --predict_prefix prefix for files generated by predict step --results RESULTS [RESULTS ...] File Column Names Phenotype Files --pf-covariates Phenotype File Field: covariates --pf-name Phenotype File Field: name Sumstats Files --ssf-alt Sumstats Field: alt allele --ssf-beta Sumstats Field: beta --ssf-maf Sumstats Field: MAF --ssf-p Sumstats field: P-value --ssf-ref Sumstats Field: reference allele --ssf-se Sumstats field: standard error --ssf-snpid Sumstats field: snpID --ssf-ss Sumstats Field: Sample Size --sumstat_prefix path to sumstats file prefixes --sumstats_suffix Sumstats Suffix","title":"All Arguments"},{"location":"detail_args/#available-commands","text":"This page contains all command available in PRSice. Tips When constructing new parameters, we follow the following rule: if the command has effect on any file that is not the target, it will have a prefix of the file name. For example, --base-info applies INFO score filtering on the base file, --ld-info perform INFO score filtering on the LD reference file and --info applies the INFO score filtering on the target file.","title":"Available Commands"},{"location":"detail_args/#input-population-filesarguments","text":"--bfile_prefix path to bfile prefix --id_file sample id file --pheno_file phenotype test data --snp_file snp file --validation_file phenotype validation data --pop_config POP_CONFIG --pop_configs POP_CONFIGS POP_CONFIGS --pop_names POP_NAMES POP_NAMES -p POPNAME Population Name","title":"Input Population Files/Arguments"},{"location":"detail_args/#system-level-togglesarguments","text":"--cores By default bridgePRS is parralelized across (n-1) -o OUTPATH Output path for bridgePRS --platform PLATFORM Force platform (Linux or MacOS) --verbose Toggle Verbose Mode On --skipAnalysis Skip Post-Pipeline Analysis --repeatSteps Toggle Repeat Pipeline Steps On --spec SPEC [SPEC ...], --specifications SPEC [SPEC ...]","title":"System Level Toggles/Arguments"},{"location":"detail_args/#parameter-arguments","text":"--fst fst value --max_clump_size Max Size for Clumping --thinned_snplist Thinned snp list for large clumps","title":"Parameter Arguments"},{"location":"detail_args/#internal-file-arguments","text":"--model_file large population model file --clump_prefix prefix for files generated by clump step --eval_prefix prefix for files generated by eval step --optimize_prefix prefix for files generated by optimize step --predict_prefix prefix for files generated by predict step --results RESULTS [RESULTS ...]","title":"Internal File Arguments"},{"location":"detail_args/#file-column-names","text":"","title":"File Column Names"},{"location":"detail_args/#phenotype-files","text":"--pf-covariates Phenotype File Field: covariates --pf-name Phenotype File Field: name","title":"Phenotype Files"},{"location":"detail_args/#sumstats-files","text":"--ssf-alt Sumstats Field: alt allele --ssf-beta Sumstats Field: beta --ssf-maf Sumstats Field: MAF --ssf-p Sumstats field: P-value --ssf-ref Sumstats Field: reference allele --ssf-se Sumstats field: standard error --ssf-snpid Sumstats field: snpID --ssf-ss Sumstats Field: Sample Size --sumstat_prefix path to sumstats file prefixes --sumstats_suffix Sumstats Suffix","title":"Sumstats Files"},{"location":"detail_background/","text":"Background You will need to have basic understanding of Genome Wide Association Studies (GWAS) in order to be able to use BridgePRS. If you are unfamiliar with GWAS, you can consider reading this paper .","title":"Background"},{"location":"detail_background/#background","text":"You will need to have basic understanding of Genome Wide Association Studies (GWAS) in order to be able to use BridgePRS. If you are unfamiliar with GWAS, you can consider reading this paper .","title":"Background"},{"location":"detail_commands/","text":"Subprograms BridgePRS consists of five related multi-function subprograms: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS analyze combine Subprogram Input Subcommands Output prs-single Primary Pop Data clump,eval,test,predict prs-result build-model Model Pop Data clump,eval,test,prior model-params prs-port Primary Pop + Model Result port,predict prs-result prs-prior Primary Pop + Model Result inform,test,predict prs-result analyze PRS Result Files combine,plot weighted prs-result These programs can be called consecutively using the easyrun master-program which will create the following directory structure: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS result combine","title":"Subprograms"},{"location":"detail_commands/#subprograms","text":"BridgePRS consists of five related multi-function subprograms: 1) BridgePRS prs-single 2) BridgePRS build-model 3) BridgePRS prs-port 4) BridgePRS prs-prior 5) BridgePRS analyze combine Subprogram Input Subcommands Output prs-single Primary Pop Data clump,eval,test,predict prs-result build-model Model Pop Data clump,eval,test,prior model-params prs-port Primary Pop + Model Result port,predict prs-result prs-prior Primary Pop + Model Result inform,test,predict prs-result analyze PRS Result Files combine,plot weighted prs-result These programs can be called consecutively using the easyrun master-program which will create the following directory structure:","title":"Subprograms"},{"location":"detail_commands/#1-bridgeprs-prs-single","text":"","title":"1) BridgePRS prs-single"},{"location":"detail_commands/#2-bridgeprs-build-model","text":"","title":"2) BridgePRS build-model"},{"location":"detail_commands/#3-bridgeprs-prs-port","text":"","title":"3) BridgePRS prs-port"},{"location":"detail_commands/#4-bridgeprs-prs-prior","text":"","title":"4) BridgePRS prs-prior"},{"location":"detail_commands/#5-bridgeprs-result-combine","text":"","title":"5) BridgePRS result combine"},{"location":"detail_input/","text":"Input Data For each population used BridgePRS requires the following input file(s) to be supplied on the command line or in a population configuration file. Name Files Command Line flag Brief Description Sumstats Data 1 per chromosome --sumstats_prefix GWAS data Plink Data 3 --bfile_prefix Plink data Phenotype Files 1-2 --pheno_files Test and Validation (not required for model population) phenotype file Snp List 1 --snp_file List of snp ids Sample List 1 --id_file List of sample ids Population Config File 0-1 --pop_config File pointing to the above inputs The column headers correspond to the following: 1) Sumstats Data GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix). If your base data follows other formats, then the column headers can be provided using the --chr , --A1 , --A2 , --stat , --snp , --bp , --pvalue options Important BridgePRS requires the base file to contain information of the effective allele ( --A1 ), effect size estimates ( --stat ), p-value for association ( --pvalue ), and the SNP ID ( --snp ). If the input file does not contain a column header, the column can be specified using their index (start counting from 0) with the --index flag. For example, with the following input format: SNP CHR BP A1 A2 OR SE P rs3094315 1 752566 A G 0.9912 0.0229 0.7009 rs3131972 1 752721 A G 1.007 0.0228 0.769 rs3131971 1 752894 T C 1.003 0.0232 0.8962 the parameters can be --snp SNP --chr CHR --bp BP --A1 A1 --A2 A2 --stat OR or Strand flips are automatically detected and accounted for. 2) Plink Data --bfile BridgePRS requires a target dataset in PLINK binary format consisting of three files: .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information. Currently only SNP major PLINK format are supported (default output of the latest PLINK program). The .bed and .bim file must have the same prefix. If the .fam file follow a different prefix from the .bed and bim file, it can be specified using --target <bim bed prefix>,<fam file> Warning The fam file MUST contains the correct number of samples or BridgePRS will crash 3) Phenotype Files External phenotype file can be provided to BridgePRS using the --pheno_files parameter. This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, or when --ignore-fid is set, the first column should be the IID. The rest of the columns can be the phenotype(s). To specify a trait within the phenotype file, the column name for the trait can be specified using --pheno-col , providing that the phenotype file contains a header. Multiple column name can be provided via a comma separated list: e.g. --pheno-col A,B,C,D . Trait(s) not found within the phenotype file will be automatically skipped. Important The column name(s) should not contain space nor comma 4) SNP List When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping. 5) Sample List When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping. 6) Population Config File This information can be supplied in a configuration file.","title":"Input Data"},{"location":"detail_input/#input-data","text":"For each population used BridgePRS requires the following input file(s) to be supplied on the command line or in a population configuration file. Name Files Command Line flag Brief Description Sumstats Data 1 per chromosome --sumstats_prefix GWAS data Plink Data 3 --bfile_prefix Plink data Phenotype Files 1-2 --pheno_files Test and Validation (not required for model population) phenotype file Snp List 1 --snp_file List of snp ids Sample List 1 --id_file List of sample ids Population Config File 0-1 --pop_config File pointing to the above inputs The column headers correspond to the following:","title":"Input Data"},{"location":"detail_input/#1-sumstats-data","text":"GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix). If your base data follows other formats, then the column headers can be provided using the --chr , --A1 , --A2 , --stat , --snp , --bp , --pvalue options Important BridgePRS requires the base file to contain information of the effective allele ( --A1 ), effect size estimates ( --stat ), p-value for association ( --pvalue ), and the SNP ID ( --snp ). If the input file does not contain a column header, the column can be specified using their index (start counting from 0) with the --index flag. For example, with the following input format: SNP CHR BP A1 A2 OR SE P rs3094315 1 752566 A G 0.9912 0.0229 0.7009 rs3131972 1 752721 A G 1.007 0.0228 0.769 rs3131971 1 752894 T C 1.003 0.0232 0.8962 the parameters can be --snp SNP --chr CHR --bp BP --A1 A1 --A2 A2 --stat OR or Strand flips are automatically detected and accounted for.","title":"1) Sumstats Data"},{"location":"detail_input/#2-plink-data-bfile","text":"BridgePRS requires a target dataset in PLINK binary format consisting of three files: .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information. Currently only SNP major PLINK format are supported (default output of the latest PLINK program). The .bed and .bim file must have the same prefix. If the .fam file follow a different prefix from the .bed and bim file, it can be specified using --target <bim bed prefix>,<fam file> Warning The fam file MUST contains the correct number of samples or BridgePRS will crash","title":"2) Plink Data  --bfile"},{"location":"detail_input/#3-phenotype-files","text":"External phenotype file can be provided to BridgePRS using the --pheno_files parameter. This must be a tab / space delimited file and missing data must be represented by either NA or -9 (only for binary traits). The first two column of the phenotype file should be the FID and the IID, or when --ignore-fid is set, the first column should be the IID. The rest of the columns can be the phenotype(s). To specify a trait within the phenotype file, the column name for the trait can be specified using --pheno-col , providing that the phenotype file contains a header. Multiple column name can be provided via a comma separated list: e.g. --pheno-col A,B,C,D . Trait(s) not found within the phenotype file will be automatically skipped. Important The column name(s) should not contain space nor comma","title":"3) Phenotype Files"},{"location":"detail_input/#4-snp-list","text":"When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping.","title":"4) SNP List"},{"location":"detail_input/#5-sample-list","text":"When the target sample is small (e.g. < 500 samples), an external reference panel can be used to improve the LD estimation for clumping.","title":"5) Sample List"},{"location":"detail_input/#6-population-config-file","text":"This information can be supplied in a configuration file.","title":"6) Population Config File"},{"location":"detail_output/","text":"Output Data For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat yo Summary Result .snp_weights.dat Snp weights The column headers correspond to the following: 1) SNP Weights GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix). If your base data follows other formats, then the column headers can be provided using the --chr , --A1 , --A2 , --stat , --snp , --bp , --pvalue options Important BridgePRS requires the base file to contain information of the effective allele ( --A1 ), effect size estimates ( --stat ), p-value for association ( --pvalue ), and the SNP ID ( --snp ). If the input file does not contain a column header, the column can be specified using their index (start counting from 0) with the --index flag. For example, with the following input format: SNP CHR BP A1 A2 OR SE P rs3094315 1 752566 A G 0.9912 0.0229 0.7009 rs3131972 1 752721 A G 1.007 0.0228 0.769 rs3131971 1 752894 T C 1.003 0.0232 0.8962 the parameters can be --snp SNP --chr CHR --bp BP --A1 A1 --A2 A2 --stat OR or Strand flips are automatically detected and accounted for. 2) Prediction Files --bfile BridgePRS requires a target dataset in PLINK binary format consisting of three files: .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information. Currently only SNP major PLINK format are supported (default output of the latest PLINK program). The .bed and .bim file must have the same prefix. If the .fam file follow a different prefix from the .bed and bim file, it can be specified using --target <bim bed prefix>,<fam file> Warning The fam file MUST contains the correct number of samples or BridgePRS will crash","title":"Output Data"},{"location":"detail_output/#output-data","text":"For every PRS invocation of BridgePRS (single, port, and prior) BridgePRS produces the following output files. Weighted combined versions of each files of also produced by BridgePRS. Name file extension Brief Description SNP Weights .snp_weights.dat Snp weights PRS Values .preds.dat yo Summary Result .snp_weights.dat Snp weights The column headers correspond to the following:","title":"Output Data"},{"location":"detail_output/#1-snp-weights","text":"GWAS summary statistics must be provided as a whitespace delimited file containing association analysis results for SNPs on the base phenotype. BridgePRS has no problem reading in a gzipped base file (need to have a .gz suffix). If your base data follows other formats, then the column headers can be provided using the --chr , --A1 , --A2 , --stat , --snp , --bp , --pvalue options Important BridgePRS requires the base file to contain information of the effective allele ( --A1 ), effect size estimates ( --stat ), p-value for association ( --pvalue ), and the SNP ID ( --snp ). If the input file does not contain a column header, the column can be specified using their index (start counting from 0) with the --index flag. For example, with the following input format: SNP CHR BP A1 A2 OR SE P rs3094315 1 752566 A G 0.9912 0.0229 0.7009 rs3131972 1 752721 A G 1.007 0.0228 0.769 rs3131971 1 752894 T C 1.003 0.0232 0.8962 the parameters can be --snp SNP --chr CHR --bp BP --A1 A1 --A2 A2 --stat OR or Strand flips are automatically detected and accounted for.","title":"1) SNP Weights"},{"location":"detail_output/#2-prediction-files-bfile","text":"BridgePRS requires a target dataset in PLINK binary format consisting of three files: .bed , .bim , and a .fam file - where bed contains the compressed genotype data, bim contains the SNP information and fam contains the family information. Currently only SNP major PLINK format are supported (default output of the latest PLINK program). The .bed and .bim file must have the same prefix. If the .fam file follow a different prefix from the .bed and bim file, it can be specified using --target <bim bed prefix>,<fam file> Warning The fam file MUST contains the correct number of samples or BridgePRS will crash","title":"2) Prediction Files  --bfile"},{"location":"detail_requirements/","text":"Requirements Before Running Downloading and Unzipping After downloading and unzipping the BridgePRS package and moving it to a suitable directory (referred to as $BridgeDir ) on your machine you will observe the following file structure: data/ src/ bridgeExampleRun.sh LICENSE README.md bridgePRS Using the terminal, navigate to this directory and type: Use the terminal to navigate to this directory and type: chmod +x bridgePRS to make the bridgePRS file executable Requirements Checking System Requirements BridgePRS depends on R, plink, and python. In the following section will will describe these requirements in detail and how they can be installed. Alternatively, you can type: ./bridgePRS check requirements and bridgePRS will check your system and prompt you to install missing software. R libraries BridgePRS requires that R ( version 3.6.3+ ) be installed. BridgePRS requires the following libraries: BEDMatrix, R.utils, boot, data.table, doMC, glmnet, MASS, optparse, and parallel Plink BridgePRS requires plink Python BridgePRS requires python.","title":"Requirements"},{"location":"detail_requirements/#requirements","text":"","title":"Requirements"},{"location":"detail_requirements/#before-running","text":"","title":"Before Running"},{"location":"detail_requirements/#downloading-and-unzipping","text":"After downloading and unzipping the BridgePRS package and moving it to a suitable directory (referred to as $BridgeDir ) on your machine you will observe the following file structure: data/ src/ bridgeExampleRun.sh LICENSE README.md bridgePRS Using the terminal, navigate to this directory and type: Use the terminal to navigate to this directory and type: chmod +x bridgePRS to make the bridgePRS file executable","title":"Downloading and Unzipping"},{"location":"detail_requirements/#requirements_1","text":"Checking System Requirements BridgePRS depends on R, plink, and python. In the following section will will describe these requirements in detail and how they can be installed. Alternatively, you can type: ./bridgePRS check requirements and bridgePRS will check your system and prompt you to install missing software.","title":"Requirements"},{"location":"detail_requirements/#r-libraries","text":"BridgePRS requires that R ( version 3.6.3+ ) be installed. BridgePRS requires the following libraries: BEDMatrix, R.utils, boot, data.table, doMC, glmnet, MASS, optparse, and parallel","title":"R libraries"},{"location":"detail_requirements/#plink","text":"BridgePRS requires plink","title":"Plink"},{"location":"detail_requirements/#python","text":"BridgePRS requires python.","title":"Python"},{"location":"detail_shell/","text":"Using BridgePRS without Python Explain this.","title":"Using Bash"},{"location":"detail_shell/#using-bridgeprs-without-python","text":"Explain this.","title":"Using BridgePRS without Python"},{"location":"math_text/","text":"Background You will need to have basic understanding of Genome Wide Association Studies (GWAS) in order to be able to use BridgePRS. If you are unfamiliar with GWAS, you can consider reading this paper . For additive model (add) \\[ G = G \\] For dominant model (with respect to the effective allele of the base file) \\[ G = \\begin{cases} 0 & \\text{if $G$ = 0} \\\\ 1 & \\text{otherwise} \\end{cases} \\] For recessive model (with respect to the effective allele of the base file) \\[ G = \\begin{cases} 1 & \\text{if $G$ = 2} \\\\ 0 & \\text{otherwise} \\end{cases} \\] For heterozygous model \\[ G = \\begin{cases} 1 & \\text{if $G$ = 1} \\\\ 0 & \\text{otherwise} \\end{cases} \\] Then depending on the --score option, the PRS is calculated as (assuming \\(M_j\\) is the number of Alleles included in the PRS of the \\(j^{th}\\) individual) --score avg (default): $$ PRS_j = \\sum_i{\\frac{S_i\\times G_{ij}}{M_j}} $$ --score sum : $$ PRS_j = \\sum_i{S_i\\times G_{ij}} $$ --score std : $$ PRS_j = \\frac{\\sum_i({S_i\\times G_{ij}}) - \\text{Mean}(PRS)}{\\text{SD}(PRS)} $$ --score con-std : $$ PRS_j = \\frac{\\sum_i({S_i\\times G_{ij}}) - \\text{Mean}(PRS in control)}{\\text{SD}(PRS in control)} $$ Specifically, the quantile plot is generated by the following steps Distribute samples into user specified number of quantiles based on their PRS Treat the quantiles as a factor, where the --quant-ref is the base factor Perform regression with \\(Pheno \\sim Quantile + Covariates\\) (use logistic regression if phenotype is binary, and linear regression otherwise) Set the reference quantile to have coefficient of 1 (if binary) or 0 (otherwise) The point of each quantile is their OR (if binary) or coefficient (otherwise) from the regression analysis A text file [Name]_QUANTILE\\_[date].txt is also produced, which provides all the data used for the plotting. Moreover, uneven distribution of quantiles can be specified using the --quant-break function, which will generate the strata plot. For example, to replicate the quantile break from Natarajan et al (2015): Percentile of PRS, % All studies in iCOGS excluding pKARMA OR (95% CI) pKARMA only OR (95% CI) <1 0.29 (0.23 to 0.37) 0.48 (0.28 to 0.83) >1\u20135 0.42 (0.37 to 0.47) 0.48 (0.36 to 0.63) 5\u201310 0.55 (0.50 to 0.61) 0.58 (0.45 to 0.74) 10\u201320 0.65 (0.60 to 0.70) 0.68 (0.57 to 0.81) 20\u201340 0.80 (0.76 to 0.85) 0.81 (0.71 to 0.94) 40\u201360 1 (referent) 1 (referent) 60\u201380 1.18 (1.12 to 1.24) 1.35 (1.19 to 1.54) 80\u201390 1.48 (1.39 to 1.57) 1.56 (1.34 to 1.82) 90\u201395 1.69 (1.56 to 1.82) 2.05 (1.70 to 2.47) 95\u201399 2.20 (2.03 to 2.38) 2.12 (1.73 to 2.59) >99 2.81 (2.43 to 3.24) 3.06 (2.16 to 4.34) The following command can be added to PRSice command: --quantile 100 \\ --quant-break 1,5,10,20,40,60,80,90,95,99,100 \\ --quant-ref 60 Specifically, --quant-break indicates the upper bound of each group and --quant-ref specify the upper bound of the reference quantiles Note The quantile boundaries are non-overlapping, with the inclusive upper bound and exclusive lower bound Note Usually, you will need --quantile 100 together with --quant-break A file containing the PRS model fit across thresholds is named [Name].prsice ; this is stored as Set, Threshold, \\(R^2\\) , P-value, Coefficient, Standard Deviation and Number of SNPs at this threshold Important \\(R^2\\) reported in the prsice file is the \\(R^2\\) of the Full model - the \\(R^2\\) of the Null model","title":"Background"},{"location":"math_text/#background","text":"You will need to have basic understanding of Genome Wide Association Studies (GWAS) in order to be able to use BridgePRS. If you are unfamiliar with GWAS, you can consider reading this paper . For additive model (add) \\[ G = G \\] For dominant model (with respect to the effective allele of the base file) \\[ G = \\begin{cases} 0 & \\text{if $G$ = 0} \\\\ 1 & \\text{otherwise} \\end{cases} \\] For recessive model (with respect to the effective allele of the base file) \\[ G = \\begin{cases} 1 & \\text{if $G$ = 2} \\\\ 0 & \\text{otherwise} \\end{cases} \\] For heterozygous model \\[ G = \\begin{cases} 1 & \\text{if $G$ = 1} \\\\ 0 & \\text{otherwise} \\end{cases} \\] Then depending on the --score option, the PRS is calculated as (assuming \\(M_j\\) is the number of Alleles included in the PRS of the \\(j^{th}\\) individual) --score avg (default): $$ PRS_j = \\sum_i{\\frac{S_i\\times G_{ij}}{M_j}} $$ --score sum : $$ PRS_j = \\sum_i{S_i\\times G_{ij}} $$ --score std : $$ PRS_j = \\frac{\\sum_i({S_i\\times G_{ij}}) - \\text{Mean}(PRS)}{\\text{SD}(PRS)} $$ --score con-std : $$ PRS_j = \\frac{\\sum_i({S_i\\times G_{ij}}) - \\text{Mean}(PRS in control)}{\\text{SD}(PRS in control)} $$ Specifically, the quantile plot is generated by the following steps Distribute samples into user specified number of quantiles based on their PRS Treat the quantiles as a factor, where the --quant-ref is the base factor Perform regression with \\(Pheno \\sim Quantile + Covariates\\) (use logistic regression if phenotype is binary, and linear regression otherwise) Set the reference quantile to have coefficient of 1 (if binary) or 0 (otherwise) The point of each quantile is their OR (if binary) or coefficient (otherwise) from the regression analysis A text file [Name]_QUANTILE\\_[date].txt is also produced, which provides all the data used for the plotting. Moreover, uneven distribution of quantiles can be specified using the --quant-break function, which will generate the strata plot. For example, to replicate the quantile break from Natarajan et al (2015): Percentile of PRS, % All studies in iCOGS excluding pKARMA OR (95% CI) pKARMA only OR (95% CI) <1 0.29 (0.23 to 0.37) 0.48 (0.28 to 0.83) >1\u20135 0.42 (0.37 to 0.47) 0.48 (0.36 to 0.63) 5\u201310 0.55 (0.50 to 0.61) 0.58 (0.45 to 0.74) 10\u201320 0.65 (0.60 to 0.70) 0.68 (0.57 to 0.81) 20\u201340 0.80 (0.76 to 0.85) 0.81 (0.71 to 0.94) 40\u201360 1 (referent) 1 (referent) 60\u201380 1.18 (1.12 to 1.24) 1.35 (1.19 to 1.54) 80\u201390 1.48 (1.39 to 1.57) 1.56 (1.34 to 1.82) 90\u201395 1.69 (1.56 to 1.82) 2.05 (1.70 to 2.47) 95\u201399 2.20 (2.03 to 2.38) 2.12 (1.73 to 2.59) >99 2.81 (2.43 to 3.24) 3.06 (2.16 to 4.34) The following command can be added to PRSice command: --quantile 100 \\ --quant-break 1,5,10,20,40,60,80,90,95,99,100 \\ --quant-ref 60 Specifically, --quant-break indicates the upper bound of each group and --quant-ref specify the upper bound of the reference quantiles Note The quantile boundaries are non-overlapping, with the inclusive upper bound and exclusive lower bound Note Usually, you will need --quantile 100 together with --quant-break A file containing the PRS model fit across thresholds is named [Name].prsice ; this is stored as Set, Threshold, \\(R^2\\) , P-value, Coefficient, Standard Deviation and Number of SNPs at this threshold Important \\(R^2\\) reported in the prsice file is the \\(R^2\\) of the Full model - the \\(R^2\\) of the Null model","title":"Background"},{"location":"misc_faq/","text":"Frequently Asked Questions We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_faq/#frequently-asked-questions","text":"We will continue to update this list to address the more common questions. I've receive the following error message, what should I do? No permission You must fix permission.","title":"Frequently Asked Questions"},{"location":"misc_log/","text":"From now on, I will try to archive our update log here. 2023-08-05 v0.1.7 Identified and fixed a bug for binary traits.","title":"Update Log"},{"location":"misc_log/#2023-08-05-v017","text":"Identified and fixed a bug for binary traits.","title":"2023-08-05 v0.1.7"},{"location":"quikstart_demo/","text":"Toy-data Demo In this demo we will use bridgePRS to combine information from primary and model populations to improve PRS results in the primary population, with a single command that mirrors the step-by-step instructions explained the detailed guide . In we consider a trait in a small sample size primary population of African ancestry where GWAS data is also available from a larger sample size population of European ancestry. Demo 1: Continuous Trait Our continuous trait data can be found in the following population configuration files: Easyrun Command Assuming, the requirements have been validated in the previous step , BridgePRS can be run using toy-data with the following command: bridgePRS easyrun go -o out --pop_configs data/afr.pop.config data/eur.pop.config --pop_names AFR EUR --specifications data/options.config --verbose This command will sequentially run the five steps described in our detailed guide : prs-single: Run PRS using the target population only (AFR). build-model: Estimate SNP weights & Prior Params from a model pop (EUR). prs-port: Run target-PRS using the model snp weights. prs-prior: Run target-PRS using model prior distributions. analyze combine Combine results to produce a weighted target PRS result. Demo 1: Result The final result can be summarized in the figure created in out/data/res.png Demo 2: Binary Trait In our first toy data example we consider a continuous trait in a small sample size primary population of African ancestry where GWAS data is also available from a larger sample size population of European ancestry. Easyrun Command Assuming, the requirements have been validated in the previous step , BridgePRS can be run using toy-data with the following command: bridgePRS easyrun go -o out --pop_configs data/afr.pop.config data/eur.pop.config --pop_names AFR EUR --specifications data/options.config --verbose This command will sequentially run the five steps described in our detailed guide : prs-single: Run PRS using the target population only (AFR). build-model: Estimate SNP weights & Prior Params from a model pop (EUR). prs-port: Run target-PRS using the model snp weights. prs-prior: Run target-PRS using model prior distributions. analyze combine Combine results to produce a weighted target PRS result. Demo 1: Result The final result can be summarized in the figure created in out/data/res.png Directory Result: The directory structure created by this command is shown below:","title":"Toy-data Demo"},{"location":"quikstart_demo/#toy-data-demo","text":"In this demo we will use bridgePRS to combine information from primary and model populations to improve PRS results in the primary population, with a single command that mirrors the step-by-step instructions explained the detailed guide . In we consider a trait in a small sample size primary population of African ancestry where GWAS data is also available from a larger sample size population of European ancestry.","title":"Toy-data Demo"},{"location":"quikstart_demo/#demo-1-continuous-trait","text":"Our continuous trait data can be found in the following population configuration files: Easyrun Command Assuming, the requirements have been validated in the previous step , BridgePRS can be run using toy-data with the following command: bridgePRS easyrun go -o out --pop_configs data/afr.pop.config data/eur.pop.config --pop_names AFR EUR --specifications data/options.config --verbose This command will sequentially run the five steps described in our detailed guide : prs-single: Run PRS using the target population only (AFR). build-model: Estimate SNP weights & Prior Params from a model pop (EUR). prs-port: Run target-PRS using the model snp weights. prs-prior: Run target-PRS using model prior distributions. analyze combine Combine results to produce a weighted target PRS result.","title":"Demo 1: Continuous Trait"},{"location":"quikstart_demo/#demo-1-result","text":"The final result can be summarized in the figure created in out/data/res.png","title":"Demo 1: Result"},{"location":"quikstart_demo/#demo-2-binary-trait","text":"In our first toy data example we consider a continuous trait in a small sample size primary population of African ancestry where GWAS data is also available from a larger sample size population of European ancestry. Easyrun Command Assuming, the requirements have been validated in the previous step , BridgePRS can be run using toy-data with the following command: bridgePRS easyrun go -o out --pop_configs data/afr.pop.config data/eur.pop.config --pop_names AFR EUR --specifications data/options.config --verbose This command will sequentially run the five steps described in our detailed guide : prs-single: Run PRS using the target population only (AFR). build-model: Estimate SNP weights & Prior Params from a model pop (EUR). prs-port: Run target-PRS using the model snp weights. prs-prior: Run target-PRS using model prior distributions. analyze combine Combine results to produce a weighted target PRS result.","title":"Demo 2: Binary Trait"},{"location":"quikstart_demo/#demo-1-result_1","text":"The final result can be summarized in the figure created in out/data/res.png","title":"Demo 1: Result"},{"location":"quikstart_demo/#directory-result","text":"The directory structure created by this command is shown below:","title":"Directory Result:"},{"location":"quikstart_prep/","text":"Before Running Preparation After downloading and unzipping the BridgePRS package and moving it to a suitable directory (referred to as $BridgeDir ) on your machine you will observe the following file structure: data/ src/ bridgeExampleRun.sh LICENSE README.md bridgePRS Using the terminal, navigate to this directory and type: Use the terminal to navigate to this directory and type: chmod +x bridgePRS to make the bridgePRS file executable Requirements Next, you can confirm that all requirements are installed and available by following the detailed instructions in Requirements. Alternatively, you can type: ./bridgePRS check requirements and bridgePRS will check your system requirements and prompt you to install them when missing. Input Data BridgePRS requires input population data to be passed using command line arguments or using population configuration files which tell the program where population specific data (sumstats, phenotypes, etc) is located. Format requirements for input data is described in Input Data . In this tutorial we will be using toy data configuation files located in $Bridgedir/data , where target population is \"AFR\" ancestry and the model population is \"EUR\" ancestry: Target Pop Config File: (data/afr.pop.config) Model Pop Config File: (data/eur.pop.config) Options Specification File: (data/options.spec)","title":"Before Running"},{"location":"quikstart_prep/#before-running","text":"","title":"Before Running"},{"location":"quikstart_prep/#preparation","text":"After downloading and unzipping the BridgePRS package and moving it to a suitable directory (referred to as $BridgeDir ) on your machine you will observe the following file structure: data/ src/ bridgeExampleRun.sh LICENSE README.md bridgePRS Using the terminal, navigate to this directory and type: Use the terminal to navigate to this directory and type: chmod +x bridgePRS to make the bridgePRS file executable","title":"Preparation"},{"location":"quikstart_prep/#requirements","text":"Next, you can confirm that all requirements are installed and available by following the detailed instructions in Requirements. Alternatively, you can type: ./bridgePRS check requirements and bridgePRS will check your system requirements and prompt you to install them when missing.","title":"Requirements"},{"location":"quikstart_prep/#input-data","text":"BridgePRS requires input population data to be passed using command line arguments or using population configuration files which tell the program where population specific data (sumstats, phenotypes, etc) is located. Format requirements for input data is described in Input Data . In this tutorial we will be using toy data configuation files located in $Bridgedir/data , where target population is \"AFR\" ancestry and the model population is \"EUR\" ancestry: Target Pop Config File: (data/afr.pop.config) Model Pop Config File: (data/eur.pop.config) Options Specification File: (data/options.spec)","title":"Input Data"}]}